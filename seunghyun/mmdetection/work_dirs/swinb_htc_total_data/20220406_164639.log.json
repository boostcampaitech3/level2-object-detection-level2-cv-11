{"mmdet_version": "2.22.0", "CLASSES": ["General trash", "Paper", "Paper pack", "Metal", "Glass", "Plastic", "Styrofoam", "Plastic bag", "Battery", "Clothing"], "env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-PCIE-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.5\nMMCV: 1.4.6\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.22.0+", "config": "model = dict(\n    type='HybridTaskCascade',\n    backbone=dict(\n        type='SwinTransformer',\n        embed_dims=128,\n        depths=[2, 2, 18, 2],\n        num_heads=[4, 8, 16, 32],\n        window_size=7,\n        mlp_ratio=4,\n        qkv_bias=True,\n        qk_scale=None,\n        drop_rate=0.0,\n        attn_drop_rate=0.0,\n        drop_path_rate=0.2,\n        patch_norm=True,\n        out_indices=(0, 1, 2, 3),\n        with_cp=False,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_base_patch4_window7_224_22k.pth'\n        )),\n    neck=dict(\n        type='FPN',\n        in_channels=[128, 256, 512, 1024],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='HybridTaskCascadeRoIHead',\n        interleaved=True,\n        mask_info_flow=True,\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                mask_size=28,\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                mask_size=28,\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                mask_size=28,\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.001,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'CocoDataset'\ndata_root = '/opt/ml/detection/dataset/'\nclasses = ('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n           'Styrofoam', 'Plastic bag', 'Battery', 'Clothing')\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\nimg_scale = (1024, 1024)\nalbu_train_transforms = [\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='Flip', p=1.0),\n            dict(type='RandomRotate90', p=1.0)\n        ],\n        p=0.5),\n    dict(\n        type='RandomResizedCrop',\n        height=1024,\n        width=1024,\n        scale=(0.5, 1.0),\n        p=0.5),\n    dict(\n        type='RandomBrightnessContrast',\n        brightness_limit=0.1,\n        contrast_limit=0.15,\n        p=0.5),\n    dict(\n        type='HueSaturationValue',\n        hue_shift_limit=15,\n        sat_shift_limit=25,\n        val_shift_limit=10,\n        p=0.5),\n    dict(type='GaussNoise', p=0.3),\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='Blur', p=1.0),\n            dict(type='GaussianBlur', p=1.0),\n            dict(type='MedianBlur', blur_limit=5, p=1.0),\n            dict(type='MotionBlur', p=1.0)\n        ],\n        p=0.1)\n]\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Albu',\n        transforms=[\n            dict(\n                type='OneOf',\n                transforms=[\n                    dict(type='Flip', p=1.0),\n                    dict(type='RandomRotate90', p=1.0)\n                ],\n                p=0.5),\n            dict(\n                type='RandomResizedCrop',\n                height=1024,\n                width=1024,\n                scale=(0.5, 1.0),\n                p=0.5),\n            dict(\n                type='RandomBrightnessContrast',\n                brightness_limit=0.1,\n                contrast_limit=0.15,\n                p=0.5),\n            dict(\n                type='HueSaturationValue',\n                hue_shift_limit=15,\n                sat_shift_limit=25,\n                val_shift_limit=10,\n                p=0.5),\n            dict(type='GaussNoise', p=0.3),\n            dict(\n                type='OneOf',\n                transforms=[\n                    dict(type='Blur', p=1.0),\n                    dict(type='GaussianBlur', p=1.0),\n                    dict(type='MedianBlur', blur_limit=5, p=1.0),\n                    dict(type='MotionBlur', p=1.0)\n                ],\n                p=0.1)\n        ],\n        bbox_params=dict(\n            type='BboxParams',\n            format='pascal_voc',\n            label_fields=['gt_labels'],\n            min_visibility=0.0,\n            filter_lost_elements=True),\n        keymap=dict(img='image', gt_bboxes='bboxes'),\n        update_pad_shape=False,\n        skip_img_without_anno=True),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\nval_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        ann_file=\n        '/opt/ml/detection/dataset/stratified_kfold/basic_v2/cv_train_3.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Albu',\n                transforms=[\n                    dict(\n                        type='OneOf',\n                        transforms=[\n                            dict(type='Flip', p=1.0),\n                            dict(type='RandomRotate90', p=1.0)\n                        ],\n                        p=0.5),\n                    dict(\n                        type='RandomResizedCrop',\n                        height=1024,\n                        width=1024,\n                        scale=(0.5, 1.0),\n                        p=0.5),\n                    dict(\n                        type='RandomBrightnessContrast',\n                        brightness_limit=0.1,\n                        contrast_limit=0.15,\n                        p=0.5),\n                    dict(\n                        type='HueSaturationValue',\n                        hue_shift_limit=15,\n                        sat_shift_limit=25,\n                        val_shift_limit=10,\n                        p=0.5),\n                    dict(type='GaussNoise', p=0.3),\n                    dict(\n                        type='OneOf',\n                        transforms=[\n                            dict(type='Blur', p=1.0),\n                            dict(type='GaussianBlur', p=1.0),\n                            dict(type='MedianBlur', blur_limit=5, p=1.0),\n                            dict(type='MotionBlur', p=1.0)\n                        ],\n                        p=0.1)\n                ],\n                bbox_params=dict(\n                    type='BboxParams',\n                    format='pascal_voc',\n                    label_fields=['gt_labels'],\n                    min_visibility=0.0,\n                    filter_lost_elements=True),\n                keymap=dict(img='image', gt_bboxes='bboxes'),\n                update_pad_shape=False,\n                skip_img_without_anno=True),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        ann_file=\n        '/opt/ml/detection/dataset/stratified_kfold/basic_v2/cv_val_3.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        ann_file='/opt/ml/detection/dataset/test.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox', classwise=True)\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=976,\n    warmup_ratio=0.001,\n    min_lr=1e-06)\nrunner = dict(type='EpochBasedRunner', max_epochs=36)\ncheckpoint_config = dict(max_keep_ckpts=5, interval=1)\nlog_config = dict(\n    interval=50,\n    hooks=[\n        dict(type='TextLoggerHook'),\n        dict(\n            type='WandbLoggerHook',\n            interval=1000,\n            init_kwargs=dict(\n                project='two-stage-model',\n                entity='canvas11',\n                name='LEE_SwinB_HTC'))\n    ])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\npretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_base_patch4_window7_224_22k.pth'\nwork_dir = 'work_dirs/swinb_htc'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 413028005, "exp_name": "htc_swin_b.py", "epoch": 36, "iter": 35136, "mmcv_version": "1.4.6", "time": "Sun Apr  3 22:01:02 2022", "hook_msgs": {"last_ckpt": "/opt/ml/detection/SEUNGHYUN_WORKSPACE/my_mmdetection/work_dirs/swinb_htc/epoch_35.pth"}}
{"mode": "train", "epoch": 37, "iter": 50, "lr": 1e-05, "memory": 25268, "data_time": 0.06752, "loss_rpn_cls": 0.01041, "loss_rpn_bbox": 0.01168, "s0.loss_cls": 0.08038, "s0.acc": 97.59668, "s0.loss_bbox": 0.04376, "s1.loss_cls": 0.02605, "s1.acc": 98.34863, "s1.loss_bbox": 0.02935, "s2.loss_cls": 0.00698, "s2.acc": 99.16406, "s2.loss_bbox": 0.00805, "loss": 0.21666, "time": 1.6363}
{"mode": "train", "epoch": 37, "iter": 100, "lr": 1e-05, "memory": 25268, "data_time": 0.01185, "loss_rpn_cls": 0.01439, "loss_rpn_bbox": 0.01521, "s0.loss_cls": 0.11109, "s0.acc": 96.56348, "s0.loss_bbox": 0.05922, "s1.loss_cls": 0.03414, "s1.acc": 97.85938, "s1.loss_bbox": 0.03577, "s2.loss_cls": 0.00862, "s2.acc": 98.96875, "s2.loss_bbox": 0.00943, "loss": 0.28787, "time": 1.57686}
{"mode": "train", "epoch": 37, "iter": 150, "lr": 1e-05, "memory": 25268, "data_time": 0.01256, "loss_rpn_cls": 0.01284, "loss_rpn_bbox": 0.01684, "s0.loss_cls": 0.08649, "s0.acc": 97.0957, "s0.loss_bbox": 0.05165, "s1.loss_cls": 0.02799, "s1.acc": 98.19629, "s1.loss_bbox": 0.0319, "s2.loss_cls": 0.00766, "s2.acc": 99.0293, "s2.loss_bbox": 0.00911, "loss": 0.24447, "time": 1.58189}
{"mode": "train", "epoch": 37, "iter": 200, "lr": 1e-05, "memory": 25268, "data_time": 0.01184, "loss_rpn_cls": 0.00911, "loss_rpn_bbox": 0.01444, "s0.loss_cls": 0.09229, "s0.acc": 97.08105, "s0.loss_bbox": 0.05174, "s1.loss_cls": 0.02992, "s1.acc": 98.12988, "s1.loss_bbox": 0.03145, "s2.loss_cls": 0.00752, "s2.acc": 99.07617, "s2.loss_bbox": 0.008, "loss": 0.24448, "time": 1.57423}
{"mode": "train", "epoch": 37, "iter": 250, "lr": 1e-05, "memory": 25268, "data_time": 0.01238, "loss_rpn_cls": 0.01142, "loss_rpn_bbox": 0.01485, "s0.loss_cls": 0.08389, "s0.acc": 97.11816, "s0.loss_bbox": 0.05436, "s1.loss_cls": 0.02884, "s1.acc": 98.07422, "s1.loss_bbox": 0.03305, "s2.loss_cls": 0.00729, "s2.acc": 99.07227, "s2.loss_bbox": 0.00849, "loss": 0.24219, "time": 1.5824}
{"mode": "train", "epoch": 37, "iter": 300, "lr": 1e-05, "memory": 25268, "data_time": 0.01201, "loss_rpn_cls": 0.00914, "loss_rpn_bbox": 0.01417, "s0.loss_cls": 0.08633, "s0.acc": 97.1748, "s0.loss_bbox": 0.05365, "s1.loss_cls": 0.02736, "s1.acc": 98.23633, "s1.loss_bbox": 0.03164, "s2.loss_cls": 0.00709, "s2.acc": 99.10449, "s2.loss_bbox": 0.00829, "loss": 0.23767, "time": 1.57511}
{"mode": "train", "epoch": 37, "iter": 350, "lr": 1e-05, "memory": 25268, "data_time": 0.01216, "loss_rpn_cls": 0.01352, "loss_rpn_bbox": 0.01436, "s0.loss_cls": 0.09285, "s0.acc": 96.8457, "s0.loss_bbox": 0.0515, "s1.loss_cls": 0.03141, "s1.acc": 97.90332, "s1.loss_bbox": 0.03242, "s2.loss_cls": 0.00808, "s2.acc": 98.95801, "s2.loss_bbox": 0.0086, "loss": 0.25276, "time": 1.58105}
{"mode": "train", "epoch": 37, "iter": 400, "lr": 1e-05, "memory": 25268, "data_time": 0.01232, "loss_rpn_cls": 0.00876, "loss_rpn_bbox": 0.01189, "s0.loss_cls": 0.08685, "s0.acc": 97.15625, "s0.loss_bbox": 0.04687, "s1.loss_cls": 0.02834, "s1.acc": 98.09668, "s1.loss_bbox": 0.03035, "s2.loss_cls": 0.00741, "s2.acc": 99.04785, "s2.loss_bbox": 0.00843, "loss": 0.2289, "time": 1.57731}
{"mode": "train", "epoch": 37, "iter": 450, "lr": 1e-05, "memory": 25268, "data_time": 0.01187, "loss_rpn_cls": 0.00873, "loss_rpn_bbox": 0.01605, "s0.loss_cls": 0.08322, "s0.acc": 97.27051, "s0.loss_bbox": 0.04629, "s1.loss_cls": 0.02666, "s1.acc": 98.27441, "s1.loss_bbox": 0.02912, "s2.loss_cls": 0.007, "s2.acc": 99.1123, "s2.loss_bbox": 0.00775, "loss": 0.22481, "time": 1.58158}
{"mode": "train", "epoch": 37, "iter": 500, "lr": 1e-05, "memory": 25268, "data_time": 0.01233, "loss_rpn_cls": 0.01321, "loss_rpn_bbox": 0.01322, "s0.loss_cls": 0.09329, "s0.acc": 97.01855, "s0.loss_bbox": 0.05066, "s1.loss_cls": 0.03134, "s1.acc": 98.01953, "s1.loss_bbox": 0.03153, "s2.loss_cls": 0.0079, "s2.acc": 99.05566, "s2.loss_bbox": 0.00854, "loss": 0.24968, "time": 1.57534}
{"mode": "train", "epoch": 37, "iter": 550, "lr": 1e-05, "memory": 25268, "data_time": 0.01194, "loss_rpn_cls": 0.0104, "loss_rpn_bbox": 0.01474, "s0.loss_cls": 0.09025, "s0.acc": 96.89941, "s0.loss_bbox": 0.05054, "s1.loss_cls": 0.03168, "s1.acc": 97.80859, "s1.loss_bbox": 0.03659, "s2.loss_cls": 0.00831, "s2.acc": 98.87305, "s2.loss_bbox": 0.01053, "loss": 0.25304, "time": 1.58146}
{"mode": "train", "epoch": 37, "iter": 600, "lr": 1e-05, "memory": 25268, "data_time": 0.01236, "loss_rpn_cls": 0.02413, "loss_rpn_bbox": 0.01757, "s0.loss_cls": 0.08852, "s0.acc": 96.95801, "s0.loss_bbox": 0.05715, "s1.loss_cls": 0.03099, "s1.acc": 97.93555, "s1.loss_bbox": 0.03622, "s2.loss_cls": 0.00856, "s2.acc": 98.92383, "s2.loss_bbox": 0.01022, "loss": 0.27337, "time": 1.58431}
{"mode": "train", "epoch": 37, "iter": 650, "lr": 1e-05, "memory": 25268, "data_time": 0.01204, "loss_rpn_cls": 0.0132, "loss_rpn_bbox": 0.01611, "s0.loss_cls": 0.10477, "s0.acc": 96.5, "s0.loss_bbox": 0.05884, "s1.loss_cls": 0.0359, "s1.acc": 97.66504, "s1.loss_bbox": 0.03838, "s2.loss_cls": 0.00958, "s2.acc": 98.79785, "s2.loss_bbox": 0.01089, "loss": 0.28767, "time": 1.57765}
{"mode": "train", "epoch": 37, "iter": 700, "lr": 1e-05, "memory": 25268, "data_time": 0.01223, "loss_rpn_cls": 0.00839, "loss_rpn_bbox": 0.01466, "s0.loss_cls": 0.09651, "s0.acc": 96.90137, "s0.loss_bbox": 0.05128, "s1.loss_cls": 0.03237, "s1.acc": 97.89746, "s1.loss_bbox": 0.03627, "s2.loss_cls": 0.00859, "s2.acc": 98.90137, "s2.loss_bbox": 0.01038, "loss": 0.25845, "time": 1.59259}
{"mode": "train", "epoch": 37, "iter": 750, "lr": 1e-05, "memory": 25268, "data_time": 0.01206, "loss_rpn_cls": 0.00732, "loss_rpn_bbox": 0.01359, "s0.loss_cls": 0.08507, "s0.acc": 97.00293, "s0.loss_bbox": 0.05315, "s1.loss_cls": 0.0271, "s1.acc": 98.1416, "s1.loss_bbox": 0.03203, "s2.loss_cls": 0.00743, "s2.acc": 98.99902, "s2.loss_bbox": 0.009, "loss": 0.23469, "time": 1.57841}
{"mode": "train", "epoch": 37, "iter": 800, "lr": 1e-05, "memory": 25268, "data_time": 0.01245, "loss_rpn_cls": 0.01408, "loss_rpn_bbox": 0.01872, "s0.loss_cls": 0.1095, "s0.acc": 96.38965, "s0.loss_bbox": 0.06175, "s1.loss_cls": 0.03687, "s1.acc": 97.59375, "s1.loss_bbox": 0.04042, "s2.loss_cls": 0.00976, "s2.acc": 98.75293, "s2.loss_bbox": 0.01138, "loss": 0.30246, "time": 1.57936}
{"mode": "train", "epoch": 37, "iter": 850, "lr": 1e-05, "memory": 25268, "data_time": 0.0122, "loss_rpn_cls": 0.01289, "loss_rpn_bbox": 0.01422, "s0.loss_cls": 0.08145, "s0.acc": 97.25586, "s0.loss_bbox": 0.04996, "s1.loss_cls": 0.02726, "s1.acc": 98.21191, "s1.loss_bbox": 0.03086, "s2.loss_cls": 0.00752, "s2.acc": 99.05859, "s2.loss_bbox": 0.00871, "loss": 0.23286, "time": 1.57734}
{"mode": "train", "epoch": 37, "iter": 900, "lr": 1e-05, "memory": 25268, "data_time": 0.01209, "loss_rpn_cls": 0.01169, "loss_rpn_bbox": 0.01645, "s0.loss_cls": 0.09662, "s0.acc": 96.88477, "s0.loss_bbox": 0.05584, "s1.loss_cls": 0.03071, "s1.acc": 98.02148, "s1.loss_bbox": 0.03196, "s2.loss_cls": 0.00817, "s2.acc": 98.98145, "s2.loss_bbox": 0.00922, "loss": 0.26066, "time": 1.57315}
{"mode": "train", "epoch": 37, "iter": 950, "lr": 1e-05, "memory": 25268, "data_time": 0.0118, "loss_rpn_cls": 0.01306, "loss_rpn_bbox": 0.01398, "s0.loss_cls": 0.09774, "s0.acc": 96.77832, "s0.loss_bbox": 0.05621, "s1.loss_cls": 0.03285, "s1.acc": 97.8457, "s1.loss_bbox": 0.03713, "s2.loss_cls": 0.0088, "s2.acc": 98.91895, "s2.loss_bbox": 0.00996, "loss": 0.26973, "time": 1.5721}
{"mode": "train", "epoch": 37, "iter": 1000, "lr": 1e-05, "memory": 25268, "data_time": 0.01208, "loss_rpn_cls": 0.01531, "loss_rpn_bbox": 0.01512, "s0.loss_cls": 0.08569, "s0.acc": 97.09473, "s0.loss_bbox": 0.05618, "s1.loss_cls": 0.03001, "s1.acc": 97.98926, "s1.loss_bbox": 0.03474, "s2.loss_cls": 0.00774, "s2.acc": 99.00977, "s2.loss_bbox": 0.00854, "loss": 0.25334, "time": 1.58516}
{"mode": "train", "epoch": 37, "iter": 1050, "lr": 1e-05, "memory": 25268, "data_time": 0.01247, "loss_rpn_cls": 0.01473, "loss_rpn_bbox": 0.01612, "s0.loss_cls": 0.09094, "s0.acc": 96.87207, "s0.loss_bbox": 0.05827, "s1.loss_cls": 0.03109, "s1.acc": 97.87402, "s1.loss_bbox": 0.0382, "s2.loss_cls": 0.00853, "s2.acc": 98.83203, "s2.loss_bbox": 0.01045, "loss": 0.26833, "time": 1.58047}
{"mode": "train", "epoch": 37, "iter": 1100, "lr": 1e-05, "memory": 25268, "data_time": 0.01285, "loss_rpn_cls": 0.01025, "loss_rpn_bbox": 0.01472, "s0.loss_cls": 0.0858, "s0.acc": 97.07129, "s0.loss_bbox": 0.04954, "s1.loss_cls": 0.02829, "s1.acc": 98.10938, "s1.loss_bbox": 0.03091, "s2.loss_cls": 0.00724, "s2.acc": 99.07031, "s2.loss_bbox": 0.00833, "loss": 0.23508, "time": 1.60958}
{"mode": "train", "epoch": 37, "iter": 1150, "lr": 1e-05, "memory": 25268, "data_time": 0.01219, "loss_rpn_cls": 0.01944, "loss_rpn_bbox": 0.01819, "s0.loss_cls": 0.10472, "s0.acc": 96.53516, "s0.loss_bbox": 0.06113, "s1.loss_cls": 0.03596, "s1.acc": 97.66504, "s1.loss_bbox": 0.04106, "s2.loss_cls": 0.00999, "s2.acc": 98.70996, "s2.loss_bbox": 0.0114, "loss": 0.30189, "time": 1.57958}
{"mode": "train", "epoch": 37, "iter": 1200, "lr": 1e-05, "memory": 25268, "data_time": 0.01258, "loss_rpn_cls": 0.03763, "loss_rpn_bbox": 0.01547, "s0.loss_cls": 0.08927, "s0.acc": 97.27148, "s0.loss_bbox": 0.05124, "s1.loss_cls": 0.02882, "s1.acc": 98.2002, "s1.loss_bbox": 0.03128, "s2.loss_cls": 0.0076, "s2.acc": 99.11621, "s2.loss_bbox": 0.008, "loss": 0.26931, "time": 1.5793}
{"mode": "val", "epoch": 37, "iter": 982, "lr": 1e-05, "bbox_mAP": 0.532, "bbox_mAP_50": 0.7, "bbox_mAP_75": 0.571, "bbox_mAP_s": 0.013, "bbox_mAP_m": 0.215, "bbox_mAP_l": 0.599, "bbox_mAP_copypaste": "0.532 0.700 0.571 0.013 0.215 0.599"}
{"mode": "train", "epoch": 38, "iter": 50, "lr": 0.0, "memory": 25268, "data_time": 0.06764, "loss_rpn_cls": 0.00995, "loss_rpn_bbox": 0.01446, "s0.loss_cls": 0.07847, "s0.acc": 97.21973, "s0.loss_bbox": 0.05139, "s1.loss_cls": 0.02717, "s1.acc": 98.07031, "s1.loss_bbox": 0.03234, "s2.loss_cls": 0.00752, "s2.acc": 99.01562, "s2.loss_bbox": 0.00959, "loss": 0.2309, "time": 1.63562}
{"mode": "train", "epoch": 38, "iter": 100, "lr": 0.0, "memory": 25268, "data_time": 0.01255, "loss_rpn_cls": 0.01286, "loss_rpn_bbox": 0.02131, "s0.loss_cls": 0.10447, "s0.acc": 96.34668, "s0.loss_bbox": 0.0698, "s1.loss_cls": 0.03661, "s1.acc": 97.53711, "s1.loss_bbox": 0.04714, "s2.loss_cls": 0.01044, "s2.acc": 98.58301, "s2.loss_bbox": 0.01346, "loss": 0.31609, "time": 1.58553}
{"mode": "train", "epoch": 38, "iter": 150, "lr": 0.0, "memory": 25268, "data_time": 0.0125, "loss_rpn_cls": 0.00951, "loss_rpn_bbox": 0.01115, "s0.loss_cls": 0.08285, "s0.acc": 97.39453, "s0.loss_bbox": 0.04648, "s1.loss_cls": 0.02691, "s1.acc": 98.33105, "s1.loss_bbox": 0.02874, "s2.loss_cls": 0.00674, "s2.acc": 99.16406, "s2.loss_bbox": 0.00783, "loss": 0.22022, "time": 1.57999}
{"mode": "train", "epoch": 38, "iter": 200, "lr": 0.0, "memory": 25268, "data_time": 0.01252, "loss_rpn_cls": 0.01176, "loss_rpn_bbox": 0.01355, "s0.loss_cls": 0.07806, "s0.acc": 97.33203, "s0.loss_bbox": 0.04518, "s1.loss_cls": 0.02467, "s1.acc": 98.29395, "s1.loss_bbox": 0.02823, "s2.loss_cls": 0.0065, "s2.acc": 99.12305, "s2.loss_bbox": 0.00762, "loss": 0.21557, "time": 1.58047}
{"mode": "train", "epoch": 38, "iter": 250, "lr": 0.0, "memory": 25268, "data_time": 0.01233, "loss_rpn_cls": 0.0086, "loss_rpn_bbox": 0.0149, "s0.loss_cls": 0.08079, "s0.acc": 97.09082, "s0.loss_bbox": 0.05028, "s1.loss_cls": 0.02887, "s1.acc": 97.93066, "s1.loss_bbox": 0.03656, "s2.loss_cls": 0.00789, "s2.acc": 98.91504, "s2.loss_bbox": 0.0103, "loss": 0.23819, "time": 1.58544}
{"mode": "train", "epoch": 38, "iter": 300, "lr": 0.0, "memory": 25268, "data_time": 0.01303, "loss_rpn_cls": 0.00799, "loss_rpn_bbox": 0.01468, "s0.loss_cls": 0.09056, "s0.acc": 96.97656, "s0.loss_bbox": 0.05351, "s1.loss_cls": 0.03123, "s1.acc": 97.93359, "s1.loss_bbox": 0.03447, "s2.loss_cls": 0.00778, "s2.acc": 98.98926, "s2.loss_bbox": 0.0089, "loss": 0.24911, "time": 1.58798}
{"mode": "train", "epoch": 38, "iter": 350, "lr": 0.0, "memory": 25268, "data_time": 0.01231, "loss_rpn_cls": 0.01403, "loss_rpn_bbox": 0.01322, "s0.loss_cls": 0.08529, "s0.acc": 97.00488, "s0.loss_bbox": 0.05227, "s1.loss_cls": 0.03046, "s1.acc": 97.91113, "s1.loss_bbox": 0.03465, "s2.loss_cls": 0.00809, "s2.acc": 98.93945, "s2.loss_bbox": 0.009, "loss": 0.24702, "time": 1.58095}
{"mode": "train", "epoch": 38, "iter": 400, "lr": 0.0, "memory": 25268, "data_time": 0.01274, "loss_rpn_cls": 0.00977, "loss_rpn_bbox": 0.01439, "s0.loss_cls": 0.08194, "s0.acc": 97.25781, "s0.loss_bbox": 0.0482, "s1.loss_cls": 0.02776, "s1.acc": 98.19727, "s1.loss_bbox": 0.03127, "s2.loss_cls": 0.00739, "s2.acc": 99.0332, "s2.loss_bbox": 0.00838, "loss": 0.22909, "time": 1.58016}
{"mode": "train", "epoch": 38, "iter": 450, "lr": 0.0, "memory": 25268, "data_time": 0.01218, "loss_rpn_cls": 0.00934, "loss_rpn_bbox": 0.01266, "s0.loss_cls": 0.08379, "s0.acc": 97.15723, "s0.loss_bbox": 0.05001, "s1.loss_cls": 0.02739, "s1.acc": 98.11816, "s1.loss_bbox": 0.03247, "s2.loss_cls": 0.00699, "s2.acc": 99.09668, "s2.loss_bbox": 0.00805, "loss": 0.23069, "time": 1.57105}
{"mode": "train", "epoch": 38, "iter": 500, "lr": 0.0, "memory": 25268, "data_time": 0.01233, "loss_rpn_cls": 0.01322, "loss_rpn_bbox": 0.01969, "s0.loss_cls": 0.10348, "s0.acc": 96.39062, "s0.loss_bbox": 0.06975, "s1.loss_cls": 0.03539, "s1.acc": 97.60156, "s1.loss_bbox": 0.04247, "s2.loss_cls": 0.00958, "s2.acc": 98.78027, "s2.loss_bbox": 0.0111, "loss": 0.30467, "time": 1.58104}
{"mode": "train", "epoch": 38, "iter": 550, "lr": 0.0, "memory": 25268, "data_time": 0.01228, "loss_rpn_cls": 0.00943, "loss_rpn_bbox": 0.0158, "s0.loss_cls": 0.08251, "s0.acc": 97.11426, "s0.loss_bbox": 0.05081, "s1.loss_cls": 0.02726, "s1.acc": 98.16211, "s1.loss_bbox": 0.03119, "s2.loss_cls": 0.00732, "s2.acc": 99.0332, "s2.loss_bbox": 0.00856, "loss": 0.23288, "time": 1.57655}
{"mode": "train", "epoch": 38, "iter": 600, "lr": 0.0, "memory": 25268, "data_time": 0.01251, "loss_rpn_cls": 0.01536, "loss_rpn_bbox": 0.01589, "s0.loss_cls": 0.09408, "s0.acc": 96.77637, "s0.loss_bbox": 0.05886, "s1.loss_cls": 0.0321, "s1.acc": 97.83496, "s1.loss_bbox": 0.03503, "s2.loss_cls": 0.00831, "s2.acc": 98.95801, "s2.loss_bbox": 0.00961, "loss": 0.26924, "time": 1.58438}
{"mode": "train", "epoch": 38, "iter": 650, "lr": 0.0, "memory": 25268, "data_time": 0.01249, "loss_rpn_cls": 0.00903, "loss_rpn_bbox": 0.01398, "s0.loss_cls": 0.0856, "s0.acc": 96.96582, "s0.loss_bbox": 0.05256, "s1.loss_cls": 0.02906, "s1.acc": 97.99512, "s1.loss_bbox": 0.0359, "s2.loss_cls": 0.00792, "s2.acc": 98.95312, "s2.loss_bbox": 0.00993, "loss": 0.24398, "time": 1.57811}
{"mode": "train", "epoch": 38, "iter": 700, "lr": 0.0, "memory": 25268, "data_time": 0.01276, "loss_rpn_cls": 0.01253, "loss_rpn_bbox": 0.01265, "s0.loss_cls": 0.07857, "s0.acc": 97.27637, "s0.loss_bbox": 0.0493, "s1.loss_cls": 0.02602, "s1.acc": 98.24902, "s1.loss_bbox": 0.03189, "s2.loss_cls": 0.00678, "s2.acc": 99.07812, "s2.loss_bbox": 0.00816, "loss": 0.22589, "time": 1.57791}
{"mode": "train", "epoch": 38, "iter": 750, "lr": 0.0, "memory": 25268, "data_time": 0.01262, "loss_rpn_cls": 0.01395, "loss_rpn_bbox": 0.01599, "s0.loss_cls": 0.095, "s0.acc": 96.9082, "s0.loss_bbox": 0.05407, "s1.loss_cls": 0.03396, "s1.acc": 97.80566, "s1.loss_bbox": 0.03697, "s2.loss_cls": 0.00935, "s2.acc": 98.85352, "s2.loss_bbox": 0.0101, "loss": 0.26938, "time": 1.5835}
{"mode": "train", "epoch": 38, "iter": 800, "lr": 0.0, "memory": 25268, "data_time": 0.01276, "loss_rpn_cls": 0.01312, "loss_rpn_bbox": 0.0158, "s0.loss_cls": 0.08194, "s0.acc": 97.20117, "s0.loss_bbox": 0.05086, "s1.loss_cls": 0.02793, "s1.acc": 98.14941, "s1.loss_bbox": 0.03332, "s2.loss_cls": 0.00779, "s2.acc": 98.99121, "s2.loss_bbox": 0.00921, "loss": 0.23997, "time": 1.58126}
{"mode": "train", "epoch": 38, "iter": 850, "lr": 0.0, "memory": 25268, "data_time": 0.01276, "loss_rpn_cls": 0.00788, "loss_rpn_bbox": 0.01452, "s0.loss_cls": 0.07948, "s0.acc": 97.37402, "s0.loss_bbox": 0.04696, "s1.loss_cls": 0.02561, "s1.acc": 98.33105, "s1.loss_bbox": 0.02922, "s2.loss_cls": 0.0069, "s2.acc": 99.06836, "s2.loss_bbox": 0.00829, "loss": 0.21888, "time": 1.5801}
{"mode": "train", "epoch": 38, "iter": 900, "lr": 0.0, "memory": 25268, "data_time": 0.01272, "loss_rpn_cls": 0.01081, "loss_rpn_bbox": 0.01299, "s0.loss_cls": 0.09224, "s0.acc": 96.94238, "s0.loss_bbox": 0.05384, "s1.loss_cls": 0.03138, "s1.acc": 97.95508, "s1.loss_bbox": 0.03469, "s2.loss_cls": 0.00849, "s2.acc": 98.91602, "s2.loss_bbox": 0.00944, "loss": 0.25388, "time": 1.57572}
{"mode": "train", "epoch": 38, "iter": 950, "lr": 0.0, "memory": 25268, "data_time": 0.01261, "loss_rpn_cls": 0.01114, "loss_rpn_bbox": 0.01589, "s0.loss_cls": 0.10106, "s0.acc": 96.60156, "s0.loss_bbox": 0.05816, "s1.loss_cls": 0.03588, "s1.acc": 97.66699, "s1.loss_bbox": 0.0375, "s2.loss_cls": 0.00867, "s2.acc": 98.93164, "s2.loss_bbox": 0.00927, "loss": 0.27758, "time": 1.58032}
{"mode": "train", "epoch": 38, "iter": 1000, "lr": 0.0, "memory": 25268, "data_time": 0.01262, "loss_rpn_cls": 0.00793, "loss_rpn_bbox": 0.01343, "s0.loss_cls": 0.07783, "s0.acc": 97.28125, "s0.loss_bbox": 0.04754, "s1.loss_cls": 0.02528, "s1.acc": 98.24316, "s1.loss_bbox": 0.03118, "s2.loss_cls": 0.00671, "s2.acc": 99.07129, "s2.loss_bbox": 0.00864, "loss": 0.21853, "time": 1.58173}
{"mode": "train", "epoch": 38, "iter": 1050, "lr": 0.0, "memory": 25268, "data_time": 0.01303, "loss_rpn_cls": 0.00809, "loss_rpn_bbox": 0.01364, "s0.loss_cls": 0.07769, "s0.acc": 97.30371, "s0.loss_bbox": 0.04828, "s1.loss_cls": 0.02596, "s1.acc": 98.19824, "s1.loss_bbox": 0.03032, "s2.loss_cls": 0.00669, "s2.acc": 99.10059, "s2.loss_bbox": 0.00817, "loss": 0.21884, "time": 1.58866}
{"mode": "train", "epoch": 38, "iter": 1100, "lr": 0.0, "memory": 25268, "data_time": 0.01256, "loss_rpn_cls": 0.0123, "loss_rpn_bbox": 0.01592, "s0.loss_cls": 0.09029, "s0.acc": 96.85352, "s0.loss_bbox": 0.05491, "s1.loss_cls": 0.03039, "s1.acc": 97.93359, "s1.loss_bbox": 0.03638, "s2.loss_cls": 0.00822, "s2.acc": 98.92285, "s2.loss_bbox": 0.0098, "loss": 0.25821, "time": 1.58306}
{"mode": "train", "epoch": 38, "iter": 1150, "lr": 0.0, "memory": 25268, "data_time": 0.01297, "loss_rpn_cls": 0.0094, "loss_rpn_bbox": 0.01202, "s0.loss_cls": 0.0842, "s0.acc": 97.23633, "s0.loss_bbox": 0.05048, "s1.loss_cls": 0.02694, "s1.acc": 98.28125, "s1.loss_bbox": 0.02985, "s2.loss_cls": 0.00704, "s2.acc": 99.14844, "s2.loss_bbox": 0.00792, "loss": 0.22785, "time": 1.58499}
{"mode": "train", "epoch": 38, "iter": 1200, "lr": 0.0, "memory": 25268, "data_time": 0.01292, "loss_rpn_cls": 0.01162, "loss_rpn_bbox": 0.01603, "s0.loss_cls": 0.0971, "s0.acc": 96.76172, "s0.loss_bbox": 0.05895, "s1.loss_cls": 0.03229, "s1.acc": 97.86621, "s1.loss_bbox": 0.03728, "s2.loss_cls": 0.0084, "s2.acc": 98.88281, "s2.loss_bbox": 0.0103, "loss": 0.27198, "time": 1.58214}
{"mode": "val", "epoch": 38, "iter": 982, "lr": 0.0, "bbox_mAP": 0.553, "bbox_mAP_50": 0.727, "bbox_mAP_75": 0.595, "bbox_mAP_s": 0.017, "bbox_mAP_m": 0.237, "bbox_mAP_l": 0.62, "bbox_mAP_copypaste": "0.553 0.727 0.595 0.017 0.237 0.620"}
{"mode": "train", "epoch": 39, "iter": 50, "lr": 0.0, "memory": 25268, "data_time": 0.06784, "loss_rpn_cls": 0.00695, "loss_rpn_bbox": 0.01265, "s0.loss_cls": 0.07827, "s0.acc": 97.27344, "s0.loss_bbox": 0.04964, "s1.loss_cls": 0.02531, "s1.acc": 98.24609, "s1.loss_bbox": 0.03212, "s2.loss_cls": 0.0067, "s2.acc": 99.07617, "s2.loss_bbox": 0.00882, "loss": 0.22046, "time": 1.64501}
{"mode": "train", "epoch": 39, "iter": 100, "lr": 0.0, "memory": 25268, "data_time": 0.01285, "loss_rpn_cls": 0.01006, "loss_rpn_bbox": 0.01451, "s0.loss_cls": 0.08276, "s0.acc": 97.17285, "s0.loss_bbox": 0.04771, "s1.loss_cls": 0.02793, "s1.acc": 98.08594, "s1.loss_bbox": 0.03176, "s2.loss_cls": 0.00763, "s2.acc": 98.96582, "s2.loss_bbox": 0.00913, "loss": 0.23149, "time": 1.58632}
{"mode": "train", "epoch": 39, "iter": 150, "lr": 0.0, "memory": 25268, "data_time": 0.01288, "loss_rpn_cls": 0.01051, "loss_rpn_bbox": 0.01369, "s0.loss_cls": 0.08691, "s0.acc": 97.08398, "s0.loss_bbox": 0.04625, "s1.loss_cls": 0.02881, "s1.acc": 98.08691, "s1.loss_bbox": 0.03036, "s2.loss_cls": 0.0075, "s2.acc": 99.03125, "s2.loss_bbox": 0.00857, "loss": 0.2326, "time": 1.58705}
{"mode": "train", "epoch": 39, "iter": 200, "lr": 0.0, "memory": 25268, "data_time": 0.01264, "loss_rpn_cls": 0.0133, "loss_rpn_bbox": 0.01295, "s0.loss_cls": 0.09486, "s0.acc": 96.83203, "s0.loss_bbox": 0.05387, "s1.loss_cls": 0.02974, "s1.acc": 98.02734, "s1.loss_bbox": 0.03143, "s2.loss_cls": 0.00763, "s2.acc": 99.02344, "s2.loss_bbox": 0.0082, "loss": 0.25198, "time": 1.58589}
{"mode": "train", "epoch": 39, "iter": 250, "lr": 0.0, "memory": 25268, "data_time": 0.01264, "loss_rpn_cls": 0.01369, "loss_rpn_bbox": 0.01445, "s0.loss_cls": 0.07968, "s0.acc": 97.37109, "s0.loss_bbox": 0.04793, "s1.loss_cls": 0.02655, "s1.acc": 98.29102, "s1.loss_bbox": 0.02984, "s2.loss_cls": 0.00738, "s2.acc": 99.11719, "s2.loss_bbox": 0.00821, "loss": 0.22774, "time": 1.58381}
{"mode": "train", "epoch": 39, "iter": 300, "lr": 0.0, "memory": 25268, "data_time": 0.01251, "loss_rpn_cls": 0.007, "loss_rpn_bbox": 0.01284, "s0.loss_cls": 0.08033, "s0.acc": 97.14258, "s0.loss_bbox": 0.04723, "s1.loss_cls": 0.02724, "s1.acc": 98.0957, "s1.loss_bbox": 0.03203, "s2.loss_cls": 0.00733, "s2.acc": 98.99121, "s2.loss_bbox": 0.00923, "loss": 0.22324, "time": 1.58027}
{"mode": "train", "epoch": 39, "iter": 350, "lr": 0.0, "memory": 25268, "data_time": 0.01268, "loss_rpn_cls": 0.01077, "loss_rpn_bbox": 0.0153, "s0.loss_cls": 0.08608, "s0.acc": 96.87109, "s0.loss_bbox": 0.05539, "s1.loss_cls": 0.03078, "s1.acc": 97.8252, "s1.loss_bbox": 0.03721, "s2.loss_cls": 0.00842, "s2.acc": 98.87695, "s2.loss_bbox": 0.01031, "loss": 0.25427, "time": 1.58541}
{"mode": "train", "epoch": 39, "iter": 400, "lr": 0.0, "memory": 25268, "data_time": 0.01263, "loss_rpn_cls": 0.00762, "loss_rpn_bbox": 0.00967, "s0.loss_cls": 0.06499, "s0.acc": 97.72461, "s0.loss_bbox": 0.04216, "s1.loss_cls": 0.02031, "s1.acc": 98.59961, "s1.loss_bbox": 0.02413, "s2.loss_cls": 0.00527, "s2.acc": 99.28613, "s2.loss_bbox": 0.0065, "loss": 0.18066, "time": 1.58399}
{"mode": "train", "epoch": 39, "iter": 450, "lr": 0.0, "memory": 25268, "data_time": 0.01264, "loss_rpn_cls": 0.00844, "loss_rpn_bbox": 0.01416, "s0.loss_cls": 0.08885, "s0.acc": 96.89844, "s0.loss_bbox": 0.05347, "s1.loss_cls": 0.03034, "s1.acc": 97.9541, "s1.loss_bbox": 0.03576, "s2.loss_cls": 0.00824, "s2.acc": 98.91504, "s2.loss_bbox": 0.00979, "loss": 0.24904, "time": 1.58988}
{"mode": "train", "epoch": 39, "iter": 500, "lr": 0.0, "memory": 25268, "data_time": 0.01272, "loss_rpn_cls": 0.01893, "loss_rpn_bbox": 0.02124, "s0.loss_cls": 0.11033, "s0.acc": 96.28027, "s0.loss_bbox": 0.06697, "s1.loss_cls": 0.03884, "s1.acc": 97.47852, "s1.loss_bbox": 0.04457, "s2.loss_cls": 0.01052, "s2.acc": 98.67285, "s2.loss_bbox": 0.01185, "loss": 0.32326, "time": 1.60083}
{"mode": "train", "epoch": 39, "iter": 550, "lr": 0.0, "memory": 25268, "data_time": 0.01227, "loss_rpn_cls": 0.0083, "loss_rpn_bbox": 0.01417, "s0.loss_cls": 0.08313, "s0.acc": 96.98047, "s0.loss_bbox": 0.05409, "s1.loss_cls": 0.02837, "s1.acc": 97.94922, "s1.loss_bbox": 0.03665, "s2.loss_cls": 0.00764, "s2.acc": 98.93945, "s2.loss_bbox": 0.01025, "loss": 0.2426, "time": 1.57935}
{"mode": "train", "epoch": 39, "iter": 600, "lr": 0.0, "memory": 25268, "data_time": 0.01252, "loss_rpn_cls": 0.0105, "loss_rpn_bbox": 0.01567, "s0.loss_cls": 0.08612, "s0.acc": 97.11621, "s0.loss_bbox": 0.05201, "s1.loss_cls": 0.02825, "s1.acc": 98.14453, "s1.loss_bbox": 0.03248, "s2.loss_cls": 0.00776, "s2.acc": 98.99414, "s2.loss_bbox": 0.00908, "loss": 0.24186, "time": 1.58824}
{"mode": "train", "epoch": 39, "iter": 650, "lr": 0.0, "memory": 25268, "data_time": 0.01266, "loss_rpn_cls": 0.00694, "loss_rpn_bbox": 0.01455, "s0.loss_cls": 0.07749, "s0.acc": 97.36133, "s0.loss_bbox": 0.05061, "s1.loss_cls": 0.02742, "s1.acc": 98.15137, "s1.loss_bbox": 0.03319, "s2.loss_cls": 0.00734, "s2.acc": 99.03809, "s2.loss_bbox": 0.00841, "loss": 0.22594, "time": 1.5768}
{"mode": "train", "epoch": 39, "iter": 700, "lr": 0.0, "memory": 25268, "data_time": 0.01242, "loss_rpn_cls": 0.00566, "loss_rpn_bbox": 0.01214, "s0.loss_cls": 0.06568, "s0.acc": 97.60156, "s0.loss_bbox": 0.04197, "s1.loss_cls": 0.02222, "s1.acc": 98.45117, "s1.loss_bbox": 0.02722, "s2.loss_cls": 0.00578, "s2.acc": 99.1543, "s2.loss_bbox": 0.00787, "loss": 0.18853, "time": 1.58221}
{"mode": "train", "epoch": 39, "iter": 750, "lr": 0.0, "memory": 25268, "data_time": 0.01293, "loss_rpn_cls": 0.01114, "loss_rpn_bbox": 0.01744, "s0.loss_cls": 0.0881, "s0.acc": 96.95801, "s0.loss_bbox": 0.05241, "s1.loss_cls": 0.03276, "s1.acc": 97.82227, "s1.loss_bbox": 0.03727, "s2.loss_cls": 0.00917, "s2.acc": 98.78613, "s2.loss_bbox": 0.01086, "loss": 0.25916, "time": 1.59054}
{"mode": "train", "epoch": 39, "iter": 800, "lr": 0.0, "memory": 25268, "data_time": 0.01277, "loss_rpn_cls": 0.00951, "loss_rpn_bbox": 0.01747, "s0.loss_cls": 0.09665, "s0.acc": 96.78906, "s0.loss_bbox": 0.05842, "s1.loss_cls": 0.03419, "s1.acc": 97.72168, "s1.loss_bbox": 0.03873, "s2.loss_cls": 0.00885, "s2.acc": 98.8457, "s2.loss_bbox": 0.01006, "loss": 0.2739, "time": 1.58888}
{"mode": "train", "epoch": 39, "iter": 850, "lr": 0.0, "memory": 25268, "data_time": 0.01268, "loss_rpn_cls": 0.00729, "loss_rpn_bbox": 0.01298, "s0.loss_cls": 0.07769, "s0.acc": 97.26562, "s0.loss_bbox": 0.049, "s1.loss_cls": 0.02512, "s1.acc": 98.27246, "s1.loss_bbox": 0.03047, "s2.loss_cls": 0.0064, "s2.acc": 99.13477, "s2.loss_bbox": 0.00822, "loss": 0.21717, "time": 1.59742}
{"mode": "train", "epoch": 39, "iter": 900, "lr": 0.0, "memory": 25268, "data_time": 0.0126, "loss_rpn_cls": 0.00691, "loss_rpn_bbox": 0.01284, "s0.loss_cls": 0.08085, "s0.acc": 97.13574, "s0.loss_bbox": 0.05276, "s1.loss_cls": 0.02743, "s1.acc": 98.06738, "s1.loss_bbox": 0.03513, "s2.loss_cls": 0.00738, "s2.acc": 99.00488, "s2.loss_bbox": 0.0095, "loss": 0.2328, "time": 1.57822}
{"mode": "train", "epoch": 39, "iter": 950, "lr": 0.0, "memory": 25268, "data_time": 0.01277, "loss_rpn_cls": 0.00888, "loss_rpn_bbox": 0.01433, "s0.loss_cls": 0.08201, "s0.acc": 97.25977, "s0.loss_bbox": 0.05031, "s1.loss_cls": 0.02834, "s1.acc": 98.09277, "s1.loss_bbox": 0.03296, "s2.loss_cls": 0.0073, "s2.acc": 99.07129, "s2.loss_bbox": 0.00866, "loss": 0.23279, "time": 1.57948}
{"mode": "train", "epoch": 39, "iter": 1000, "lr": 0.0, "memory": 25268, "data_time": 0.01232, "loss_rpn_cls": 0.00862, "loss_rpn_bbox": 0.01515, "s0.loss_cls": 0.08258, "s0.acc": 97.07812, "s0.loss_bbox": 0.05065, "s1.loss_cls": 0.02856, "s1.acc": 98.03418, "s1.loss_bbox": 0.03365, "s2.loss_cls": 0.00778, "s2.acc": 98.9707, "s2.loss_bbox": 0.00936, "loss": 0.23634, "time": 1.58739}
{"mode": "train", "epoch": 39, "iter": 1050, "lr": 0.0, "memory": 25268, "data_time": 0.01303, "loss_rpn_cls": 0.00762, "loss_rpn_bbox": 0.01444, "s0.loss_cls": 0.08423, "s0.acc": 97.01367, "s0.loss_bbox": 0.05093, "s1.loss_cls": 0.02886, "s1.acc": 98.00098, "s1.loss_bbox": 0.03487, "s2.loss_cls": 0.00703, "s2.acc": 99.04883, "s2.loss_bbox": 0.00907, "loss": 0.23706, "time": 1.58537}
{"mode": "train", "epoch": 39, "iter": 1100, "lr": 0.0, "memory": 25268, "data_time": 0.01234, "loss_rpn_cls": 0.01135, "loss_rpn_bbox": 0.01381, "s0.loss_cls": 0.08453, "s0.acc": 97.1582, "s0.loss_bbox": 0.05176, "s1.loss_cls": 0.02767, "s1.acc": 98.17969, "s1.loss_bbox": 0.03018, "s2.loss_cls": 0.00731, "s2.acc": 99.05371, "s2.loss_bbox": 0.0087, "loss": 0.23531, "time": 1.58439}
{"mode": "train", "epoch": 39, "iter": 1150, "lr": 0.0, "memory": 25268, "data_time": 0.01257, "loss_rpn_cls": 0.00888, "loss_rpn_bbox": 0.01361, "s0.loss_cls": 0.07292, "s0.acc": 97.41309, "s0.loss_bbox": 0.04374, "s1.loss_cls": 0.02418, "s1.acc": 98.24414, "s1.loss_bbox": 0.02953, "s2.loss_cls": 0.00656, "s2.acc": 99.10547, "s2.loss_bbox": 0.00853, "loss": 0.20795, "time": 1.58368}
{"mode": "train", "epoch": 39, "iter": 1200, "lr": 0.0, "memory": 25268, "data_time": 0.01303, "loss_rpn_cls": 0.01089, "loss_rpn_bbox": 0.01743, "s0.loss_cls": 0.0937, "s0.acc": 96.79492, "s0.loss_bbox": 0.05619, "s1.loss_cls": 0.03166, "s1.acc": 97.8584, "s1.loss_bbox": 0.03705, "s2.loss_cls": 0.0083, "s2.acc": 98.94531, "s2.loss_bbox": 0.00967, "loss": 0.26491, "time": 1.58105}
{"mode": "val", "epoch": 39, "iter": 982, "lr": 0.0, "bbox_mAP": 0.566, "bbox_mAP_50": 0.743, "bbox_mAP_75": 0.609, "bbox_mAP_s": 0.02, "bbox_mAP_m": 0.252, "bbox_mAP_l": 0.633, "bbox_mAP_copypaste": "0.566 0.743 0.609 0.020 0.252 0.633"}
{"mode": "train", "epoch": 40, "iter": 50, "lr": 0.0, "memory": 25268, "data_time": 0.06801, "loss_rpn_cls": 0.00991, "loss_rpn_bbox": 0.017, "s0.loss_cls": 0.07934, "s0.acc": 97.18457, "s0.loss_bbox": 0.05126, "s1.loss_cls": 0.02793, "s1.acc": 98.06738, "s1.loss_bbox": 0.03507, "s2.loss_cls": 0.00756, "s2.acc": 98.97949, "s2.loss_bbox": 0.01014, "loss": 0.2382, "time": 1.64318}
{"mode": "train", "epoch": 40, "iter": 100, "lr": 0.0, "memory": 25268, "data_time": 0.01272, "loss_rpn_cls": 0.00949, "loss_rpn_bbox": 0.01674, "s0.loss_cls": 0.10592, "s0.acc": 96.36816, "s0.loss_bbox": 0.06543, "s1.loss_cls": 0.03722, "s1.acc": 97.45605, "s1.loss_bbox": 0.04375, "s2.loss_cls": 0.00994, "s2.acc": 98.65918, "s2.loss_bbox": 0.01232, "loss": 0.30081, "time": 1.58601}
{"mode": "train", "epoch": 40, "iter": 150, "lr": 0.0, "memory": 25268, "data_time": 0.01275, "loss_rpn_cls": 0.01088, "loss_rpn_bbox": 0.01451, "s0.loss_cls": 0.08603, "s0.acc": 97.21582, "s0.loss_bbox": 0.04979, "s1.loss_cls": 0.02927, "s1.acc": 98.14258, "s1.loss_bbox": 0.033, "s2.loss_cls": 0.00744, "s2.acc": 99.03906, "s2.loss_bbox": 0.0089, "loss": 0.23983, "time": 1.58551}
{"mode": "train", "epoch": 40, "iter": 200, "lr": 0.0, "memory": 25268, "data_time": 0.01269, "loss_rpn_cls": 0.00789, "loss_rpn_bbox": 0.01301, "s0.loss_cls": 0.07938, "s0.acc": 97.20898, "s0.loss_bbox": 0.05183, "s1.loss_cls": 0.02681, "s1.acc": 98.05859, "s1.loss_bbox": 0.03248, "s2.loss_cls": 0.00681, "s2.acc": 99.05957, "s2.loss_bbox": 0.00887, "loss": 0.22709, "time": 1.58693}
{"mode": "train", "epoch": 40, "iter": 250, "lr": 0.0, "memory": 25268, "data_time": 0.01234, "loss_rpn_cls": 0.00725, "loss_rpn_bbox": 0.01214, "s0.loss_cls": 0.07128, "s0.acc": 97.46191, "s0.loss_bbox": 0.04266, "s1.loss_cls": 0.02336, "s1.acc": 98.35547, "s1.loss_bbox": 0.02703, "s2.loss_cls": 0.00591, "s2.acc": 99.1709, "s2.loss_bbox": 0.00744, "loss": 0.19707, "time": 1.58281}
{"mode": "train", "epoch": 40, "iter": 300, "lr": 0.0, "memory": 25268, "data_time": 0.0122, "loss_rpn_cls": 0.01086, "loss_rpn_bbox": 0.01644, "s0.loss_cls": 0.07832, "s0.acc": 97.33984, "s0.loss_bbox": 0.0494, "s1.loss_cls": 0.02736, "s1.acc": 98.06152, "s1.loss_bbox": 0.0336, "s2.loss_cls": 0.00776, "s2.acc": 98.90918, "s2.loss_bbox": 0.01, "loss": 0.23374, "time": 1.57541}
{"mode": "train", "epoch": 40, "iter": 350, "lr": 0.0, "memory": 25268, "data_time": 0.01257, "loss_rpn_cls": 0.00799, "loss_rpn_bbox": 0.013, "s0.loss_cls": 0.07862, "s0.acc": 97.22559, "s0.loss_bbox": 0.04743, "s1.loss_cls": 0.02612, "s1.acc": 98.14941, "s1.loss_bbox": 0.03153, "s2.loss_cls": 0.00672, "s2.acc": 99.06738, "s2.loss_bbox": 0.00871, "loss": 0.22012, "time": 1.58109}
{"mode": "train", "epoch": 40, "iter": 400, "lr": 0.0, "memory": 25268, "data_time": 0.01276, "loss_rpn_cls": 0.00852, "loss_rpn_bbox": 0.0158, "s0.loss_cls": 0.0742, "s0.acc": 97.26562, "s0.loss_bbox": 0.05193, "s1.loss_cls": 0.02487, "s1.acc": 98.17969, "s1.loss_bbox": 0.03358, "s2.loss_cls": 0.00662, "s2.acc": 99.08984, "s2.loss_bbox": 0.00902, "loss": 0.22455, "time": 1.58099}
{"mode": "train", "epoch": 40, "iter": 450, "lr": 0.0, "memory": 25268, "data_time": 0.01323, "loss_rpn_cls": 0.01055, "loss_rpn_bbox": 0.01182, "s0.loss_cls": 0.08054, "s0.acc": 97.18555, "s0.loss_bbox": 0.04825, "s1.loss_cls": 0.02669, "s1.acc": 98.17773, "s1.loss_bbox": 0.0314, "s2.loss_cls": 0.00707, "s2.acc": 99.05859, "s2.loss_bbox": 0.00892, "loss": 0.22524, "time": 1.57937}
{"mode": "train", "epoch": 40, "iter": 500, "lr": 0.0, "memory": 25268, "data_time": 0.0132, "loss_rpn_cls": 0.02043, "loss_rpn_bbox": 0.01663, "s0.loss_cls": 0.09659, "s0.acc": 96.59082, "s0.loss_bbox": 0.06128, "s1.loss_cls": 0.03406, "s1.acc": 97.69531, "s1.loss_bbox": 0.03933, "s2.loss_cls": 0.00877, "s2.acc": 98.86328, "s2.loss_bbox": 0.00974, "loss": 0.28684, "time": 1.58376}
{"mode": "train", "epoch": 40, "iter": 550, "lr": 0.0, "memory": 25268, "data_time": 0.01269, "loss_rpn_cls": 0.01363, "loss_rpn_bbox": 0.01829, "s0.loss_cls": 0.0918, "s0.acc": 96.86328, "s0.loss_bbox": 0.06069, "s1.loss_cls": 0.03068, "s1.acc": 97.96875, "s1.loss_bbox": 0.03779, "s2.loss_cls": 0.00793, "s2.acc": 98.99707, "s2.loss_bbox": 0.00937, "loss": 0.27019, "time": 1.58934}
{"mode": "train", "epoch": 40, "iter": 600, "lr": 0.0, "memory": 25268, "data_time": 0.01248, "loss_rpn_cls": 0.01834, "loss_rpn_bbox": 0.0158, "s0.loss_cls": 0.10033, "s0.acc": 96.69043, "s0.loss_bbox": 0.05426, "s1.loss_cls": 0.03351, "s1.acc": 97.86914, "s1.loss_bbox": 0.03385, "s2.loss_cls": 0.00851, "s2.acc": 98.97363, "s2.loss_bbox": 0.00904, "loss": 0.27364, "time": 1.58367}
{"mode": "train", "epoch": 40, "iter": 650, "lr": 0.0, "memory": 25268, "data_time": 0.01284, "loss_rpn_cls": 0.01046, "loss_rpn_bbox": 0.0165, "s0.loss_cls": 0.09542, "s0.acc": 96.55273, "s0.loss_bbox": 0.06642, "s1.loss_cls": 0.03239, "s1.acc": 97.71875, "s1.loss_bbox": 0.0435, "s2.loss_cls": 0.00905, "s2.acc": 98.75, "s2.loss_bbox": 0.01139, "loss": 0.28513, "time": 1.58299}
{"mode": "train", "epoch": 40, "iter": 700, "lr": 0.0, "memory": 25268, "data_time": 0.01323, "loss_rpn_cls": 0.00524, "loss_rpn_bbox": 0.00895, "s0.loss_cls": 0.07198, "s0.acc": 97.47949, "s0.loss_bbox": 0.03874, "s1.loss_cls": 0.02272, "s1.acc": 98.41504, "s1.loss_bbox": 0.02423, "s2.loss_cls": 0.00565, "s2.acc": 99.2168, "s2.loss_bbox": 0.00675, "loss": 0.18426, "time": 1.58028}
{"mode": "train", "epoch": 40, "iter": 750, "lr": 0.0, "memory": 25268, "data_time": 0.01274, "loss_rpn_cls": 0.01002, "loss_rpn_bbox": 0.01215, "s0.loss_cls": 0.08513, "s0.acc": 97.07324, "s0.loss_bbox": 0.04759, "s1.loss_cls": 0.02844, "s1.acc": 98.06738, "s1.loss_bbox": 0.03226, "s2.loss_cls": 0.00772, "s2.acc": 98.98926, "s2.loss_bbox": 0.00909, "loss": 0.23241, "time": 1.57631}
{"mode": "train", "epoch": 40, "iter": 800, "lr": 0.0, "memory": 25268, "data_time": 0.01244, "loss_rpn_cls": 0.00967, "loss_rpn_bbox": 0.02013, "s0.loss_cls": 0.09447, "s0.acc": 96.63867, "s0.loss_bbox": 0.06323, "s1.loss_cls": 0.03274, "s1.acc": 97.72266, "s1.loss_bbox": 0.0408, "s2.loss_cls": 0.00892, "s2.acc": 98.76172, "s2.loss_bbox": 0.01102, "loss": 0.28098, "time": 1.56977}
{"mode": "train", "epoch": 40, "iter": 850, "lr": 0.0, "memory": 25268, "data_time": 0.01262, "loss_rpn_cls": 0.01342, "loss_rpn_bbox": 0.01638, "s0.loss_cls": 0.09254, "s0.acc": 96.86719, "s0.loss_bbox": 0.05585, "s1.loss_cls": 0.03112, "s1.acc": 97.89844, "s1.loss_bbox": 0.03666, "s2.loss_cls": 0.00829, "s2.acc": 98.89648, "s2.loss_bbox": 0.01025, "loss": 0.26452, "time": 1.58691}
{"mode": "train", "epoch": 40, "iter": 900, "lr": 0.0, "memory": 25268, "data_time": 0.01265, "loss_rpn_cls": 0.00703, "loss_rpn_bbox": 0.01441, "s0.loss_cls": 0.07305, "s0.acc": 97.36328, "s0.loss_bbox": 0.04531, "s1.loss_cls": 0.02409, "s1.acc": 98.24414, "s1.loss_bbox": 0.03095, "s2.loss_cls": 0.00655, "s2.acc": 99.05078, "s2.loss_bbox": 0.00857, "loss": 0.20995, "time": 1.57294}
{"mode": "train", "epoch": 40, "iter": 950, "lr": 0.0, "memory": 25268, "data_time": 0.01299, "loss_rpn_cls": 0.0104, "loss_rpn_bbox": 0.01479, "s0.loss_cls": 0.07894, "s0.acc": 97.12988, "s0.loss_bbox": 0.04523, "s1.loss_cls": 0.02748, "s1.acc": 98.05762, "s1.loss_bbox": 0.0301, "s2.loss_cls": 0.00723, "s2.acc": 99.00781, "s2.loss_bbox": 0.00954, "loss": 0.22372, "time": 1.57688}
{"mode": "train", "epoch": 40, "iter": 1000, "lr": 0.0, "memory": 25268, "data_time": 0.01355, "loss_rpn_cls": 0.00558, "loss_rpn_bbox": 0.00773, "s0.loss_cls": 0.05589, "s0.acc": 98.04492, "s0.loss_bbox": 0.03532, "s1.loss_cls": 0.01896, "s1.acc": 98.67285, "s1.loss_bbox": 0.02276, "s2.loss_cls": 0.00447, "s2.acc": 99.40039, "s2.loss_bbox": 0.00567, "loss": 0.15637, "time": 1.58221}
{"mode": "train", "epoch": 40, "iter": 1050, "lr": 0.0, "memory": 25268, "data_time": 0.01255, "loss_rpn_cls": 0.01108, "loss_rpn_bbox": 0.0186, "s0.loss_cls": 0.09068, "s0.acc": 96.81152, "s0.loss_bbox": 0.05692, "s1.loss_cls": 0.02944, "s1.acc": 97.96289, "s1.loss_bbox": 0.03539, "s2.loss_cls": 0.00809, "s2.acc": 98.9248, "s2.loss_bbox": 0.01053, "loss": 0.26073, "time": 1.57897}
{"mode": "train", "epoch": 40, "iter": 1100, "lr": 0.0, "memory": 25268, "data_time": 0.01276, "loss_rpn_cls": 0.01364, "loss_rpn_bbox": 0.01533, "s0.loss_cls": 0.08138, "s0.acc": 97.13477, "s0.loss_bbox": 0.05139, "s1.loss_cls": 0.0261, "s1.acc": 98.15137, "s1.loss_bbox": 0.03257, "s2.loss_cls": 0.00695, "s2.acc": 99.06445, "s2.loss_bbox": 0.00834, "loss": 0.23568, "time": 1.57091}
{"mode": "train", "epoch": 40, "iter": 1150, "lr": 0.0, "memory": 25268, "data_time": 0.01293, "loss_rpn_cls": 0.0093, "loss_rpn_bbox": 0.01199, "s0.loss_cls": 0.0774, "s0.acc": 97.18359, "s0.loss_bbox": 0.0516, "s1.loss_cls": 0.02639, "s1.acc": 98.12695, "s1.loss_bbox": 0.03296, "s2.loss_cls": 0.00692, "s2.acc": 99.05371, "s2.loss_bbox": 0.00854, "loss": 0.22509, "time": 1.57708}
{"mode": "train", "epoch": 40, "iter": 1200, "lr": 0.0, "memory": 25268, "data_time": 0.01253, "loss_rpn_cls": 0.00695, "loss_rpn_bbox": 0.0116, "s0.loss_cls": 0.07224, "s0.acc": 97.5332, "s0.loss_bbox": 0.04532, "s1.loss_cls": 0.02381, "s1.acc": 98.39258, "s1.loss_bbox": 0.02834, "s2.loss_cls": 0.00677, "s2.acc": 99.08984, "s2.loss_bbox": 0.00783, "loss": 0.20286, "time": 1.57121}
{"mode": "val", "epoch": 40, "iter": 982, "lr": 0.0, "bbox_mAP": 0.577, "bbox_mAP_50": 0.755, "bbox_mAP_75": 0.62, "bbox_mAP_s": 0.024, "bbox_mAP_m": 0.264, "bbox_mAP_l": 0.643, "bbox_mAP_copypaste": "0.577 0.755 0.620 0.024 0.264 0.643"}
{"mode": "train", "epoch": 41, "iter": 50, "lr": 0.0, "memory": 25268, "data_time": 0.06663, "loss_rpn_cls": 0.00909, "loss_rpn_bbox": 0.01579, "s0.loss_cls": 0.08475, "s0.acc": 97.06738, "s0.loss_bbox": 0.05177, "s1.loss_cls": 0.02975, "s1.acc": 97.98047, "s1.loss_bbox": 0.03436, "s2.loss_cls": 0.00766, "s2.acc": 99.00684, "s2.loss_bbox": 0.00882, "loss": 0.24199, "time": 1.62482}
{"mode": "train", "epoch": 41, "iter": 100, "lr": 0.0, "memory": 25268, "data_time": 0.01243, "loss_rpn_cls": 0.01537, "loss_rpn_bbox": 0.01403, "s0.loss_cls": 0.0873, "s0.acc": 97.08594, "s0.loss_bbox": 0.05297, "s1.loss_cls": 0.02981, "s1.acc": 98.0625, "s1.loss_bbox": 0.03218, "s2.loss_cls": 0.00788, "s2.acc": 99.03613, "s2.loss_bbox": 0.00791, "loss": 0.24744, "time": 1.56844}
{"mode": "train", "epoch": 41, "iter": 150, "lr": 0.0, "memory": 25268, "data_time": 0.01251, "loss_rpn_cls": 0.00718, "loss_rpn_bbox": 0.01483, "s0.loss_cls": 0.07888, "s0.acc": 97.27539, "s0.loss_bbox": 0.04942, "s1.loss_cls": 0.02787, "s1.acc": 98.04297, "s1.loss_bbox": 0.03287, "s2.loss_cls": 0.00761, "s2.acc": 98.97656, "s2.loss_bbox": 0.00945, "loss": 0.22811, "time": 1.57319}
{"mode": "train", "epoch": 41, "iter": 200, "lr": 0.0, "memory": 25268, "data_time": 0.0128, "loss_rpn_cls": 0.00686, "loss_rpn_bbox": 0.0121, "s0.loss_cls": 0.07119, "s0.acc": 97.48145, "s0.loss_bbox": 0.0417, "s1.loss_cls": 0.02229, "s1.acc": 98.44824, "s1.loss_bbox": 0.02719, "s2.loss_cls": 0.00585, "s2.acc": 99.18652, "s2.loss_bbox": 0.00769, "loss": 0.19487, "time": 1.58458}
{"mode": "train", "epoch": 41, "iter": 250, "lr": 0.0, "memory": 25268, "data_time": 0.01259, "loss_rpn_cls": 0.0078, "loss_rpn_bbox": 0.01448, "s0.loss_cls": 0.07218, "s0.acc": 97.38867, "s0.loss_bbox": 0.0498, "s1.loss_cls": 0.02456, "s1.acc": 98.27441, "s1.loss_bbox": 0.03125, "s2.loss_cls": 0.0065, "s2.acc": 99.11328, "s2.loss_bbox": 0.00849, "loss": 0.21505, "time": 1.57996}
{"mode": "train", "epoch": 41, "iter": 300, "lr": 0.0, "memory": 25268, "data_time": 0.01274, "loss_rpn_cls": 0.01114, "loss_rpn_bbox": 0.01694, "s0.loss_cls": 0.08297, "s0.acc": 96.98242, "s0.loss_bbox": 0.05576, "s1.loss_cls": 0.02896, "s1.acc": 97.9375, "s1.loss_bbox": 0.03728, "s2.loss_cls": 0.00799, "s2.acc": 98.8584, "s2.loss_bbox": 0.01054, "loss": 0.25157, "time": 1.58457}
{"mode": "train", "epoch": 41, "iter": 350, "lr": 0.0, "memory": 25268, "data_time": 0.01225, "loss_rpn_cls": 0.00731, "loss_rpn_bbox": 0.01199, "s0.loss_cls": 0.0689, "s0.acc": 97.60547, "s0.loss_bbox": 0.0425, "s1.loss_cls": 0.02158, "s1.acc": 98.51953, "s1.loss_bbox": 0.02521, "s2.loss_cls": 0.00518, "s2.acc": 99.27637, "s2.loss_bbox": 0.00664, "loss": 0.18931, "time": 1.57239}
{"mode": "train", "epoch": 41, "iter": 400, "lr": 0.0, "memory": 25268, "data_time": 0.01262, "loss_rpn_cls": 0.0076, "loss_rpn_bbox": 0.01352, "s0.loss_cls": 0.08196, "s0.acc": 97.12207, "s0.loss_bbox": 0.05657, "s1.loss_cls": 0.0278, "s1.acc": 98.08301, "s1.loss_bbox": 0.03577, "s2.loss_cls": 0.00719, "s2.acc": 99.0791, "s2.loss_bbox": 0.00924, "loss": 0.23966, "time": 1.56938}
{"mode": "train", "epoch": 41, "iter": 450, "lr": 0.0, "memory": 25268, "data_time": 0.01266, "loss_rpn_cls": 0.00926, "loss_rpn_bbox": 0.01672, "s0.loss_cls": 0.08729, "s0.acc": 96.91797, "s0.loss_bbox": 0.05381, "s1.loss_cls": 0.03082, "s1.acc": 97.8623, "s1.loss_bbox": 0.0351, "s2.loss_cls": 0.0078, "s2.acc": 99.00098, "s2.loss_bbox": 0.00945, "loss": 0.25025, "time": 1.58733}
{"mode": "train", "epoch": 41, "iter": 500, "lr": 0.0, "memory": 25268, "data_time": 0.0125, "loss_rpn_cls": 0.01097, "loss_rpn_bbox": 0.01536, "s0.loss_cls": 0.09405, "s0.acc": 97.04102, "s0.loss_bbox": 0.05109, "s1.loss_cls": 0.03082, "s1.acc": 98.02246, "s1.loss_bbox": 0.03317, "s2.loss_cls": 0.00791, "s2.acc": 99.07324, "s2.loss_bbox": 0.00888, "loss": 0.25225, "time": 1.58635}
{"mode": "train", "epoch": 41, "iter": 550, "lr": 0.0, "memory": 25268, "data_time": 0.01276, "loss_rpn_cls": 0.01154, "loss_rpn_bbox": 0.0181, "s0.loss_cls": 0.10568, "s0.acc": 96.33398, "s0.loss_bbox": 0.06581, "s1.loss_cls": 0.03503, "s1.acc": 97.56641, "s1.loss_bbox": 0.04189, "s2.loss_cls": 0.00954, "s2.acc": 98.71484, "s2.loss_bbox": 0.01222, "loss": 0.2998, "time": 1.57894}
{"mode": "train", "epoch": 41, "iter": 600, "lr": 0.0, "memory": 25268, "data_time": 0.01271, "loss_rpn_cls": 0.00927, "loss_rpn_bbox": 0.01199, "s0.loss_cls": 0.07506, "s0.acc": 97.38477, "s0.loss_bbox": 0.04592, "s1.loss_cls": 0.02553, "s1.acc": 98.20801, "s1.loss_bbox": 0.03145, "s2.loss_cls": 0.00701, "s2.acc": 99.06152, "s2.loss_bbox": 0.00885, "loss": 0.21507, "time": 1.57539}
{"mode": "train", "epoch": 41, "iter": 650, "lr": 0.0, "memory": 25268, "data_time": 0.01294, "loss_rpn_cls": 0.00859, "loss_rpn_bbox": 0.01493, "s0.loss_cls": 0.0758, "s0.acc": 97.36621, "s0.loss_bbox": 0.04767, "s1.loss_cls": 0.02452, "s1.acc": 98.31055, "s1.loss_bbox": 0.03039, "s2.loss_cls": 0.00674, "s2.acc": 99.08301, "s2.loss_bbox": 0.00892, "loss": 0.21757, "time": 1.57144}
{"mode": "train", "epoch": 41, "iter": 700, "lr": 0.0, "memory": 25268, "data_time": 0.0127, "loss_rpn_cls": 0.01054, "loss_rpn_bbox": 0.017, "s0.loss_cls": 0.08775, "s0.acc": 96.90625, "s0.loss_bbox": 0.05687, "s1.loss_cls": 0.03086, "s1.acc": 97.80859, "s1.loss_bbox": 0.03855, "s2.loss_cls": 0.00904, "s2.acc": 98.75977, "s2.loss_bbox": 0.01135, "loss": 0.26196, "time": 1.58006}
{"mode": "train", "epoch": 41, "iter": 750, "lr": 0.0, "memory": 25268, "data_time": 0.01265, "loss_rpn_cls": 0.01096, "loss_rpn_bbox": 0.01416, "s0.loss_cls": 0.08583, "s0.acc": 97.10645, "s0.loss_bbox": 0.04841, "s1.loss_cls": 0.02865, "s1.acc": 98.04883, "s1.loss_bbox": 0.0303, "s2.loss_cls": 0.00729, "s2.acc": 99.05664, "s2.loss_bbox": 0.00845, "loss": 0.23405, "time": 1.5784}
{"mode": "train", "epoch": 41, "iter": 800, "lr": 0.0, "memory": 25268, "data_time": 0.01275, "loss_rpn_cls": 0.0102, "loss_rpn_bbox": 0.01424, "s0.loss_cls": 0.0846, "s0.acc": 96.9873, "s0.loss_bbox": 0.05275, "s1.loss_cls": 0.02876, "s1.acc": 98.00391, "s1.loss_bbox": 0.03573, "s2.loss_cls": 0.00801, "s2.acc": 98.93945, "s2.loss_bbox": 0.00973, "loss": 0.24401, "time": 1.571}
{"mode": "train", "epoch": 41, "iter": 850, "lr": 0.0, "memory": 25268, "data_time": 0.01259, "loss_rpn_cls": 0.0072, "loss_rpn_bbox": 0.01222, "s0.loss_cls": 0.0729, "s0.acc": 97.38184, "s0.loss_bbox": 0.04599, "s1.loss_cls": 0.02454, "s1.acc": 98.27832, "s1.loss_bbox": 0.0309, "s2.loss_cls": 0.00642, "s2.acc": 99.09668, "s2.loss_bbox": 0.00834, "loss": 0.20851, "time": 1.57601}
{"mode": "train", "epoch": 41, "iter": 900, "lr": 0.0, "memory": 25268, "data_time": 0.01249, "loss_rpn_cls": 0.00957, "loss_rpn_bbox": 0.01441, "s0.loss_cls": 0.08714, "s0.acc": 96.93262, "s0.loss_bbox": 0.05256, "s1.loss_cls": 0.0301, "s1.acc": 97.89551, "s1.loss_bbox": 0.0371, "s2.loss_cls": 0.00826, "s2.acc": 98.88184, "s2.loss_bbox": 0.01033, "loss": 0.24947, "time": 1.57921}
{"mode": "train", "epoch": 41, "iter": 950, "lr": 0.0, "memory": 25268, "data_time": 0.01286, "loss_rpn_cls": 0.0086, "loss_rpn_bbox": 0.01155, "s0.loss_cls": 0.08394, "s0.acc": 97.13477, "s0.loss_bbox": 0.04662, "s1.loss_cls": 0.02921, "s1.acc": 98.06543, "s1.loss_bbox": 0.03023, "s2.loss_cls": 0.00748, "s2.acc": 99.04688, "s2.loss_bbox": 0.00835, "loss": 0.22598, "time": 1.58082}
{"mode": "train", "epoch": 41, "iter": 1000, "lr": 0.0, "memory": 25268, "data_time": 0.01259, "loss_rpn_cls": 0.01845, "loss_rpn_bbox": 0.01884, "s0.loss_cls": 0.09567, "s0.acc": 96.76562, "s0.loss_bbox": 0.0579, "s1.loss_cls": 0.03474, "s1.acc": 97.71973, "s1.loss_bbox": 0.03882, "s2.loss_cls": 0.00919, "s2.acc": 98.84082, "s2.loss_bbox": 0.01019, "loss": 0.28379, "time": 1.5838}
{"mode": "train", "epoch": 41, "iter": 1050, "lr": 0.0, "memory": 25268, "data_time": 0.01245, "loss_rpn_cls": 0.01182, "loss_rpn_bbox": 0.01675, "s0.loss_cls": 0.09012, "s0.acc": 96.75586, "s0.loss_bbox": 0.05751, "s1.loss_cls": 0.02954, "s1.acc": 97.92969, "s1.loss_bbox": 0.03447, "s2.loss_cls": 0.00804, "s2.acc": 98.92383, "s2.loss_bbox": 0.01004, "loss": 0.25827, "time": 1.58015}
{"mode": "train", "epoch": 41, "iter": 1100, "lr": 0.0, "memory": 25268, "data_time": 0.01258, "loss_rpn_cls": 0.00522, "loss_rpn_bbox": 0.01018, "s0.loss_cls": 0.06188, "s0.acc": 97.67383, "s0.loss_bbox": 0.03841, "s1.loss_cls": 0.02046, "s1.acc": 98.48535, "s1.loss_bbox": 0.02525, "s2.loss_cls": 0.00528, "s2.acc": 99.24902, "s2.loss_bbox": 0.00697, "loss": 0.17364, "time": 1.58838}
{"mode": "train", "epoch": 41, "iter": 1150, "lr": 0.0, "memory": 25268, "data_time": 0.01247, "loss_rpn_cls": 0.00815, "loss_rpn_bbox": 0.01616, "s0.loss_cls": 0.07896, "s0.acc": 97.24023, "s0.loss_bbox": 0.04733, "s1.loss_cls": 0.02719, "s1.acc": 98.11621, "s1.loss_bbox": 0.03268, "s2.loss_cls": 0.0073, "s2.acc": 99.04004, "s2.loss_bbox": 0.00875, "loss": 0.22654, "time": 1.58675}
{"mode": "train", "epoch": 41, "iter": 1200, "lr": 0.0, "memory": 25268, "data_time": 0.01272, "loss_rpn_cls": 0.00895, "loss_rpn_bbox": 0.01606, "s0.loss_cls": 0.0905, "s0.acc": 96.83301, "s0.loss_bbox": 0.05507, "s1.loss_cls": 0.03176, "s1.acc": 97.80371, "s1.loss_bbox": 0.03804, "s2.loss_cls": 0.00868, "s2.acc": 98.88477, "s2.loss_bbox": 0.01022, "loss": 0.25928, "time": 1.57991}
{"mode": "val", "epoch": 41, "iter": 982, "lr": 0.0, "bbox_mAP": 0.584, "bbox_mAP_50": 0.763, "bbox_mAP_75": 0.628, "bbox_mAP_s": 0.023, "bbox_mAP_m": 0.276, "bbox_mAP_l": 0.649, "bbox_mAP_copypaste": "0.584 0.763 0.628 0.023 0.276 0.649"}
{"mode": "train", "epoch": 42, "iter": 50, "lr": 0.0, "memory": 25268, "data_time": 0.06757, "loss_rpn_cls": 0.00965, "loss_rpn_bbox": 0.01442, "s0.loss_cls": 0.08984, "s0.acc": 96.9707, "s0.loss_bbox": 0.05438, "s1.loss_cls": 0.02992, "s1.acc": 97.99316, "s1.loss_bbox": 0.03359, "s2.loss_cls": 0.00815, "s2.acc": 98.93359, "s2.loss_bbox": 0.00969, "loss": 0.24964, "time": 1.64089}
{"mode": "train", "epoch": 42, "iter": 100, "lr": 0.0, "memory": 25268, "data_time": 0.01259, "loss_rpn_cls": 0.01143, "loss_rpn_bbox": 0.0126, "s0.loss_cls": 0.07342, "s0.acc": 97.46191, "s0.loss_bbox": 0.04649, "s1.loss_cls": 0.02386, "s1.acc": 98.37402, "s1.loss_bbox": 0.02731, "s2.loss_cls": 0.00639, "s2.acc": 99.16602, "s2.loss_bbox": 0.00718, "loss": 0.20868, "time": 1.57885}
{"mode": "train", "epoch": 42, "iter": 150, "lr": 0.0, "memory": 25268, "data_time": 0.01276, "loss_rpn_cls": 0.00772, "loss_rpn_bbox": 0.01567, "s0.loss_cls": 0.08498, "s0.acc": 97.17383, "s0.loss_bbox": 0.04854, "s1.loss_cls": 0.02846, "s1.acc": 98.15137, "s1.loss_bbox": 0.03201, "s2.loss_cls": 0.0076, "s2.acc": 99.03223, "s2.loss_bbox": 0.00935, "loss": 0.23433, "time": 1.58551}
{"mode": "train", "epoch": 42, "iter": 200, "lr": 0.0, "memory": 25268, "data_time": 0.01264, "loss_rpn_cls": 0.01344, "loss_rpn_bbox": 0.01562, "s0.loss_cls": 0.092, "s0.acc": 96.89648, "s0.loss_bbox": 0.05619, "s1.loss_cls": 0.03126, "s1.acc": 97.91406, "s1.loss_bbox": 0.03583, "s2.loss_cls": 0.0085, "s2.acc": 98.88574, "s2.loss_bbox": 0.00984, "loss": 0.26268, "time": 1.57847}
{"mode": "train", "epoch": 42, "iter": 250, "lr": 0.0, "memory": 25268, "data_time": 0.01239, "loss_rpn_cls": 0.01312, "loss_rpn_bbox": 0.01405, "s0.loss_cls": 0.09325, "s0.acc": 96.94141, "s0.loss_bbox": 0.05495, "s1.loss_cls": 0.03109, "s1.acc": 97.96289, "s1.loss_bbox": 0.03499, "s2.loss_cls": 0.00804, "s2.acc": 99.01074, "s2.loss_bbox": 0.00894, "loss": 0.25843, "time": 1.58269}
{"mode": "train", "epoch": 42, "iter": 300, "lr": 0.0, "memory": 25268, "data_time": 0.01265, "loss_rpn_cls": 0.00824, "loss_rpn_bbox": 0.01211, "s0.loss_cls": 0.08652, "s0.acc": 97.00879, "s0.loss_bbox": 0.05231, "s1.loss_cls": 0.02698, "s1.acc": 98.10156, "s1.loss_bbox": 0.03309, "s2.loss_cls": 0.00788, "s2.acc": 98.91309, "s2.loss_bbox": 0.00961, "loss": 0.23674, "time": 1.5806}
{"mode": "train", "epoch": 42, "iter": 350, "lr": 0.0, "memory": 25268, "data_time": 0.01254, "loss_rpn_cls": 0.00936, "loss_rpn_bbox": 0.01184, "s0.loss_cls": 0.0659, "s0.acc": 97.74902, "s0.loss_bbox": 0.0404, "s1.loss_cls": 0.02192, "s1.acc": 98.4668, "s1.loss_bbox": 0.02687, "s2.loss_cls": 0.00646, "s2.acc": 99.12695, "s2.loss_bbox": 0.0076, "loss": 0.19035, "time": 1.58214}
{"mode": "train", "epoch": 42, "iter": 400, "lr": 0.0, "memory": 25268, "data_time": 0.01256, "loss_rpn_cls": 0.00863, "loss_rpn_bbox": 0.01633, "s0.loss_cls": 0.0875, "s0.acc": 96.96094, "s0.loss_bbox": 0.05546, "s1.loss_cls": 0.02993, "s1.acc": 97.88477, "s1.loss_bbox": 0.03678, "s2.loss_cls": 0.00835, "s2.acc": 98.85156, "s2.loss_bbox": 0.01069, "loss": 0.25367, "time": 1.59084}
{"mode": "train", "epoch": 42, "iter": 450, "lr": 0.0, "memory": 25268, "data_time": 0.01233, "loss_rpn_cls": 0.01145, "loss_rpn_bbox": 0.01408, "s0.loss_cls": 0.08421, "s0.acc": 97.07227, "s0.loss_bbox": 0.04983, "s1.loss_cls": 0.02809, "s1.acc": 98.10156, "s1.loss_bbox": 0.03262, "s2.loss_cls": 0.00762, "s2.acc": 98.99219, "s2.loss_bbox": 0.00898, "loss": 0.23687, "time": 1.58098}
{"mode": "train", "epoch": 42, "iter": 500, "lr": 0.0, "memory": 25268, "data_time": 0.01269, "loss_rpn_cls": 0.00909, "loss_rpn_bbox": 0.01706, "s0.loss_cls": 0.0796, "s0.acc": 97.05469, "s0.loss_bbox": 0.0547, "s1.loss_cls": 0.02697, "s1.acc": 98.06445, "s1.loss_bbox": 0.03488, "s2.loss_cls": 0.00755, "s2.acc": 98.9541, "s2.loss_bbox": 0.00956, "loss": 0.2394, "time": 1.58302}
{"mode": "train", "epoch": 42, "iter": 550, "lr": 0.0, "memory": 25268, "data_time": 0.01297, "loss_rpn_cls": 0.01028, "loss_rpn_bbox": 0.01465, "s0.loss_cls": 0.08439, "s0.acc": 97.05664, "s0.loss_bbox": 0.05307, "s1.loss_cls": 0.03045, "s1.acc": 97.91992, "s1.loss_bbox": 0.03726, "s2.loss_cls": 0.00821, "s2.acc": 98.94238, "s2.loss_bbox": 0.01011, "loss": 0.24843, "time": 1.59402}
{"mode": "train", "epoch": 42, "iter": 600, "lr": 0.0, "memory": 25268, "data_time": 0.01253, "loss_rpn_cls": 0.00934, "loss_rpn_bbox": 0.01603, "s0.loss_cls": 0.08112, "s0.acc": 97.12402, "s0.loss_bbox": 0.05015, "s1.loss_cls": 0.02782, "s1.acc": 98.04785, "s1.loss_bbox": 0.03238, "s2.loss_cls": 0.00695, "s2.acc": 99.06738, "s2.loss_bbox": 0.00854, "loss": 0.23234, "time": 1.59294}
{"mode": "train", "epoch": 42, "iter": 650, "lr": 0.0, "memory": 25268, "data_time": 0.01245, "loss_rpn_cls": 0.01142, "loss_rpn_bbox": 0.01193, "s0.loss_cls": 0.07775, "s0.acc": 97.34766, "s0.loss_bbox": 0.04718, "s1.loss_cls": 0.02466, "s1.acc": 98.29492, "s1.loss_bbox": 0.03063, "s2.loss_cls": 0.00645, "s2.acc": 99.12402, "s2.loss_bbox": 0.00814, "loss": 0.21816, "time": 1.57644}
{"mode": "train", "epoch": 42, "iter": 700, "lr": 0.0, "memory": 25268, "data_time": 0.0125, "loss_rpn_cls": 0.00776, "loss_rpn_bbox": 0.0125, "s0.loss_cls": 0.07248, "s0.acc": 97.35547, "s0.loss_bbox": 0.05109, "s1.loss_cls": 0.02435, "s1.acc": 98.26367, "s1.loss_bbox": 0.03273, "s2.loss_cls": 0.0065, "s2.acc": 99.11523, "s2.loss_bbox": 0.00881, "loss": 0.21622, "time": 1.5814}
{"mode": "train", "epoch": 42, "iter": 750, "lr": 0.0, "memory": 25268, "data_time": 0.01242, "loss_rpn_cls": 0.00636, "loss_rpn_bbox": 0.01444, "s0.loss_cls": 0.07217, "s0.acc": 97.25879, "s0.loss_bbox": 0.04928, "s1.loss_cls": 0.02559, "s1.acc": 98.13477, "s1.loss_bbox": 0.0346, "s2.loss_cls": 0.00719, "s2.acc": 98.99316, "s2.loss_bbox": 0.00966, "loss": 0.21928, "time": 1.58252}
{"mode": "train", "epoch": 42, "iter": 800, "lr": 0.0, "memory": 25268, "data_time": 0.01211, "loss_rpn_cls": 0.0078, "loss_rpn_bbox": 0.01247, "s0.loss_cls": 0.0752, "s0.acc": 97.37402, "s0.loss_bbox": 0.04738, "s1.loss_cls": 0.02443, "s1.acc": 98.30566, "s1.loss_bbox": 0.02998, "s2.loss_cls": 0.00627, "s2.acc": 99.15527, "s2.loss_bbox": 0.00809, "loss": 0.21161, "time": 1.5885}
{"mode": "train", "epoch": 42, "iter": 850, "lr": 0.0, "memory": 25268, "data_time": 0.01262, "loss_rpn_cls": 0.01089, "loss_rpn_bbox": 0.01523, "s0.loss_cls": 0.0936, "s0.acc": 96.7627, "s0.loss_bbox": 0.05559, "s1.loss_cls": 0.03204, "s1.acc": 97.84473, "s1.loss_bbox": 0.03507, "s2.loss_cls": 0.00832, "s2.acc": 98.89844, "s2.loss_bbox": 0.00986, "loss": 0.26061, "time": 1.59719}
{"mode": "train", "epoch": 42, "iter": 900, "lr": 0.0, "memory": 25268, "data_time": 0.01204, "loss_rpn_cls": 0.01553, "loss_rpn_bbox": 0.01541, "s0.loss_cls": 0.08762, "s0.acc": 96.94434, "s0.loss_bbox": 0.0533, "s1.loss_cls": 0.03172, "s1.acc": 97.8916, "s1.loss_bbox": 0.03597, "s2.loss_cls": 0.009, "s2.acc": 98.7959, "s2.loss_bbox": 0.01007, "loss": 0.25864, "time": 1.57381}
{"mode": "train", "epoch": 42, "iter": 950, "lr": 0.0, "memory": 25268, "data_time": 0.01245, "loss_rpn_cls": 0.00792, "loss_rpn_bbox": 0.01415, "s0.loss_cls": 0.07975, "s0.acc": 97.16309, "s0.loss_bbox": 0.0492, "s1.loss_cls": 0.02773, "s1.acc": 98.06543, "s1.loss_bbox": 0.03491, "s2.loss_cls": 0.00739, "s2.acc": 99.00391, "s2.loss_bbox": 0.00989, "loss": 0.23094, "time": 1.58115}
{"mode": "train", "epoch": 42, "iter": 1000, "lr": 0.0, "memory": 25268, "data_time": 0.01273, "loss_rpn_cls": 0.00672, "loss_rpn_bbox": 0.01367, "s0.loss_cls": 0.07192, "s0.acc": 97.40039, "s0.loss_bbox": 0.04789, "s1.loss_cls": 0.02531, "s1.acc": 98.16406, "s1.loss_bbox": 0.03345, "s2.loss_cls": 0.00692, "s2.acc": 99.03125, "s2.loss_bbox": 0.00928, "loss": 0.21516, "time": 1.58818}
{"mode": "train", "epoch": 42, "iter": 1050, "lr": 0.0, "memory": 25268, "data_time": 0.01282, "loss_rpn_cls": 0.00822, "loss_rpn_bbox": 0.01497, "s0.loss_cls": 0.0805, "s0.acc": 97.19141, "s0.loss_bbox": 0.05348, "s1.loss_cls": 0.02652, "s1.acc": 98.12891, "s1.loss_bbox": 0.03182, "s2.loss_cls": 0.00691, "s2.acc": 99.08008, "s2.loss_bbox": 0.00879, "loss": 0.23121, "time": 1.58046}
{"mode": "train", "epoch": 42, "iter": 1100, "lr": 0.0, "memory": 25268, "data_time": 0.01285, "loss_rpn_cls": 0.01057, "loss_rpn_bbox": 0.01744, "s0.loss_cls": 0.0936, "s0.acc": 96.73242, "s0.loss_bbox": 0.05966, "s1.loss_cls": 0.03083, "s1.acc": 97.8125, "s1.loss_bbox": 0.03784, "s2.loss_cls": 0.00836, "s2.acc": 98.89258, "s2.loss_bbox": 0.00995, "loss": 0.26825, "time": 1.58737}
{"mode": "train", "epoch": 42, "iter": 1150, "lr": 0.0, "memory": 25268, "data_time": 0.01224, "loss_rpn_cls": 0.01064, "loss_rpn_bbox": 0.01412, "s0.loss_cls": 0.07986, "s0.acc": 97.19824, "s0.loss_bbox": 0.04884, "s1.loss_cls": 0.02802, "s1.acc": 98.0625, "s1.loss_bbox": 0.03271, "s2.loss_cls": 0.00753, "s2.acc": 98.98535, "s2.loss_bbox": 0.00915, "loss": 0.23086, "time": 1.58152}
{"mode": "train", "epoch": 42, "iter": 1200, "lr": 0.0, "memory": 25268, "data_time": 0.01257, "loss_rpn_cls": 0.00798, "loss_rpn_bbox": 0.01438, "s0.loss_cls": 0.08407, "s0.acc": 97.02441, "s0.loss_bbox": 0.05512, "s1.loss_cls": 0.02792, "s1.acc": 98.01562, "s1.loss_bbox": 0.03467, "s2.loss_cls": 0.00753, "s2.acc": 98.94727, "s2.loss_bbox": 0.00927, "loss": 0.24094, "time": 1.58385}
{"mode": "val", "epoch": 42, "iter": 982, "lr": 0.0, "bbox_mAP": 0.591, "bbox_mAP_50": 0.767, "bbox_mAP_75": 0.637, "bbox_mAP_s": 0.027, "bbox_mAP_m": 0.28, "bbox_mAP_l": 0.656, "bbox_mAP_copypaste": "0.591 0.767 0.637 0.027 0.280 0.656"}
