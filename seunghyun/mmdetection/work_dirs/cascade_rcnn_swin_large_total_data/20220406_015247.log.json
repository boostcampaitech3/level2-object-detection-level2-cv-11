{"mmdet_version": "2.22.0", "CLASSES": ["General trash", "Paper", "Paper pack", "Metal", "Glass", "Plastic", "Styrofoam", "Plastic bag", "Battery", "Clothing"], "env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-PCIE-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.5\nMMCV: 1.4.6\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.22.0+", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='SwinTransformer',\n        embed_dims=192,\n        depths=[2, 2, 18, 2],\n        num_heads=[6, 12, 24, 48],\n        window_size=12,\n        mlp_ratio=4,\n        qkv_bias=True,\n        qk_scale=None,\n        drop_rate=0.0,\n        attn_drop_rate=0.0,\n        drop_path_rate=0.2,\n        patch_norm=True,\n        out_indices=(0, 1, 2, 3),\n        with_cp=False,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_large_patch4_window12_384_22k.pth'\n        )),\n    neck=dict(\n        type='FPN',\n        in_channels=[192, 384, 768, 1536],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[2, 4, 8, 16],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '/opt/ml/detection/dataset/'\nclasses = ('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n           'Styrofoam', 'Plastic bag', 'Battery', 'Clothing')\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\nimg_scale = (1024, 1024)\nalbu_train_transforms = [\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='Flip', p=1.0),\n            dict(type='RandomRotate90', p=1.0)\n        ],\n        p=0.5),\n    dict(\n        type='RandomResizedCrop',\n        height=1024,\n        width=1024,\n        scale=(0.5, 1.0),\n        p=0.5),\n    dict(\n        type='RandomBrightnessContrast',\n        brightness_limit=0.1,\n        contrast_limit=0.15,\n        p=0.5),\n    dict(\n        type='HueSaturationValue',\n        hue_shift_limit=15,\n        sat_shift_limit=25,\n        val_shift_limit=10,\n        p=0.5),\n    dict(type='GaussNoise', p=0.3),\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='Blur', p=1.0),\n            dict(type='GaussianBlur', p=1.0),\n            dict(type='MedianBlur', blur_limit=5, p=1.0),\n            dict(type='MotionBlur', p=1.0)\n        ],\n        p=0.1)\n]\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Albu',\n        transforms=[\n            dict(\n                type='OneOf',\n                transforms=[\n                    dict(type='Flip', p=1.0),\n                    dict(type='RandomRotate90', p=1.0)\n                ],\n                p=0.5),\n            dict(\n                type='RandomResizedCrop',\n                height=1024,\n                width=1024,\n                scale=(0.5, 1.0),\n                p=0.5),\n            dict(\n                type='RandomBrightnessContrast',\n                brightness_limit=0.1,\n                contrast_limit=0.15,\n                p=0.5),\n            dict(\n                type='HueSaturationValue',\n                hue_shift_limit=15,\n                sat_shift_limit=25,\n                val_shift_limit=10,\n                p=0.5),\n            dict(type='GaussNoise', p=0.3),\n            dict(\n                type='OneOf',\n                transforms=[\n                    dict(type='Blur', p=1.0),\n                    dict(type='GaussianBlur', p=1.0),\n                    dict(type='MedianBlur', blur_limit=5, p=1.0),\n                    dict(type='MotionBlur', p=1.0)\n                ],\n                p=0.1)\n        ],\n        bbox_params=dict(\n            type='BboxParams',\n            format='pascal_voc',\n            label_fields=['gt_labels'],\n            min_visibility=0.0,\n            filter_lost_elements=True),\n        keymap=dict(img='image', gt_bboxes='bboxes'),\n        update_pad_shape=False,\n        skip_img_without_anno=True),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\nval_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        ann_file=\n        '/opt/ml/detection/dataset/stratified_kfold/basic_v2/cv_train_3.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1024, 1024), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Albu',\n                transforms=[\n                    dict(\n                        type='OneOf',\n                        transforms=[\n                            dict(type='Flip', p=1.0),\n                            dict(type='RandomRotate90', p=1.0)\n                        ],\n                        p=0.5),\n                    dict(\n                        type='RandomResizedCrop',\n                        height=1024,\n                        width=1024,\n                        scale=(0.5, 1.0),\n                        p=0.5),\n                    dict(\n                        type='RandomBrightnessContrast',\n                        brightness_limit=0.1,\n                        contrast_limit=0.15,\n                        p=0.5),\n                    dict(\n                        type='HueSaturationValue',\n                        hue_shift_limit=15,\n                        sat_shift_limit=25,\n                        val_shift_limit=10,\n                        p=0.5),\n                    dict(type='GaussNoise', p=0.3),\n                    dict(\n                        type='OneOf',\n                        transforms=[\n                            dict(type='Blur', p=1.0),\n                            dict(type='GaussianBlur', p=1.0),\n                            dict(type='MedianBlur', blur_limit=5, p=1.0),\n                            dict(type='MotionBlur', p=1.0)\n                        ],\n                        p=0.1)\n                ],\n                bbox_params=dict(\n                    type='BboxParams',\n                    format='pascal_voc',\n                    label_fields=['gt_labels'],\n                    min_visibility=0.0,\n                    filter_lost_elements=True),\n                keymap=dict(img='image', gt_bboxes='bboxes'),\n                update_pad_shape=False,\n                skip_img_without_anno=True),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        ann_file=\n        '/opt/ml/detection/dataset/stratified_kfold/basic_v2/cv_val_3.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        ann_file='/opt/ml/detection/dataset/test.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox', classwise=True)\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=1951,\n    warmup_ratio=0.001,\n    min_lr=1e-06)\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(max_keep_ckpts=5, interval=1)\nlog_config = dict(\n    interval=50,\n    hooks=[\n        dict(type='TextLoggerHook'),\n        dict(\n            type='WandbLoggerHook',\n            interval=1000,\n            init_kwargs=dict(\n                project='two-stage-model',\n                entity='canvas11',\n                name='LEE_SwinL_CASCADE_RPN_CHANGED'))\n    ])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\npretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_large_patch4_window12_384_22k.pth'\nwork_dir = 'work_dirs/cascade_rcnn_swin_large'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1919273029, "exp_name": "cascade_rcnn_swin_large.py", "epoch": 12, "iter": 23412, "mmcv_version": "1.4.6", "time": "Tue Apr  5 17:05:57 2022", "hook_msgs": {"last_ckpt": "/opt/ml/detection/SEUNGHYUN_WORKSPACE/my_mmdetection/work_dirs/cascade_rcnn_swin_large/epoch_11.pth"}}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 1e-05, "memory": 26586, "data_time": 0.05679, "loss_rpn_cls": 0.03898, "loss_rpn_bbox": 0.04622, "s0.loss_cls": 0.16805, "s0.acc": 94.47461, "s0.loss_bbox": 0.08751, "s1.loss_cls": 0.08587, "s1.acc": 94.74399, "s1.loss_bbox": 0.08581, "s2.loss_cls": 0.04422, "s2.acc": 94.45908, "s2.loss_bbox": 0.05433, "loss": 0.61099, "time": 1.55385}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 1e-05, "memory": 26894, "data_time": 0.00759, "loss_rpn_cls": 0.01879, "loss_rpn_bbox": 0.04986, "s0.loss_cls": 0.16629, "s0.acc": 94.22656, "s0.loss_bbox": 0.09129, "s1.loss_cls": 0.07541, "s1.acc": 94.59398, "s1.loss_bbox": 0.08472, "s2.loss_cls": 0.03794, "s2.acc": 94.5443, "s2.loss_bbox": 0.05201, "loss": 0.5763, "time": 1.49098}
{"mode": "train", "epoch": 13, "iter": 150, "lr": 1e-05, "memory": 27148, "data_time": 0.00758, "loss_rpn_cls": 0.02432, "loss_rpn_bbox": 0.0509, "s0.loss_cls": 0.17609, "s0.acc": 94.11133, "s0.loss_bbox": 0.08637, "s1.loss_cls": 0.08101, "s1.acc": 94.61419, "s1.loss_bbox": 0.08483, "s2.loss_cls": 0.04077, "s2.acc": 94.58607, "s2.loss_bbox": 0.05382, "loss": 0.5981, "time": 1.48883}
{"mode": "train", "epoch": 13, "iter": 200, "lr": 1e-05, "memory": 27148, "data_time": 0.00754, "loss_rpn_cls": 0.0202, "loss_rpn_bbox": 0.0435, "s0.loss_cls": 0.16051, "s0.acc": 94.54883, "s0.loss_bbox": 0.08627, "s1.loss_cls": 0.07333, "s1.acc": 95.00873, "s1.loss_bbox": 0.08506, "s2.loss_cls": 0.03666, "s2.acc": 95.00862, "s2.loss_bbox": 0.0502, "loss": 0.55572, "time": 1.4889}
{"mode": "train", "epoch": 13, "iter": 250, "lr": 1e-05, "memory": 27148, "data_time": 0.00747, "loss_rpn_cls": 0.0199, "loss_rpn_bbox": 0.04736, "s0.loss_cls": 0.15745, "s0.acc": 94.5957, "s0.loss_bbox": 0.08609, "s1.loss_cls": 0.07222, "s1.acc": 94.95948, "s1.loss_bbox": 0.08671, "s2.loss_cls": 0.03534, "s2.acc": 95.08199, "s2.loss_bbox": 0.05421, "loss": 0.55928, "time": 1.48772}
{"mode": "train", "epoch": 13, "iter": 300, "lr": 1e-05, "memory": 27148, "data_time": 0.00753, "loss_rpn_cls": 0.01645, "loss_rpn_bbox": 0.03951, "s0.loss_cls": 0.15483, "s0.acc": 94.65039, "s0.loss_bbox": 0.08724, "s1.loss_cls": 0.07278, "s1.acc": 95.24028, "s1.loss_bbox": 0.07908, "s2.loss_cls": 0.03406, "s2.acc": 95.64112, "s2.loss_bbox": 0.0451, "loss": 0.52904, "time": 1.49303}
{"mode": "train", "epoch": 13, "iter": 350, "lr": 1e-05, "memory": 27148, "data_time": 0.00758, "loss_rpn_cls": 0.02634, "loss_rpn_bbox": 0.04739, "s0.loss_cls": 0.16817, "s0.acc": 94.19141, "s0.loss_bbox": 0.09734, "s1.loss_cls": 0.07238, "s1.acc": 95.31203, "s1.loss_bbox": 0.09283, "s2.loss_cls": 0.03406, "s2.acc": 95.3093, "s2.loss_bbox": 0.05742, "loss": 0.59593, "time": 1.49878}
{"mode": "train", "epoch": 13, "iter": 400, "lr": 1e-05, "memory": 27544, "data_time": 0.00768, "loss_rpn_cls": 0.03396, "loss_rpn_bbox": 0.05434, "s0.loss_cls": 0.17211, "s0.acc": 94.01953, "s0.loss_bbox": 0.10964, "s1.loss_cls": 0.07678, "s1.acc": 94.65978, "s1.loss_bbox": 0.0959, "s2.loss_cls": 0.03711, "s2.acc": 94.41021, "s2.loss_bbox": 0.06025, "loss": 0.64007, "time": 1.50316}
{"mode": "train", "epoch": 13, "iter": 450, "lr": 1e-05, "memory": 27544, "data_time": 0.00753, "loss_rpn_cls": 0.02297, "loss_rpn_bbox": 0.05033, "s0.loss_cls": 0.16552, "s0.acc": 94.1875, "s0.loss_bbox": 0.08881, "s1.loss_cls": 0.07453, "s1.acc": 94.95716, "s1.loss_bbox": 0.0854, "s2.loss_cls": 0.03553, "s2.acc": 95.23405, "s2.loss_bbox": 0.05541, "loss": 0.57851, "time": 1.49599}
{"mode": "train", "epoch": 13, "iter": 500, "lr": 1e-05, "memory": 27544, "data_time": 0.00755, "loss_rpn_cls": 0.01809, "loss_rpn_bbox": 0.04419, "s0.loss_cls": 0.18377, "s0.acc": 94.05859, "s0.loss_bbox": 0.09488, "s1.loss_cls": 0.08221, "s1.acc": 94.94169, "s1.loss_bbox": 0.09376, "s2.loss_cls": 0.03881, "s2.acc": 94.84156, "s2.loss_bbox": 0.0612, "loss": 0.61691, "time": 1.49958}
{"mode": "train", "epoch": 13, "iter": 550, "lr": 1e-05, "memory": 27544, "data_time": 0.00762, "loss_rpn_cls": 0.01923, "loss_rpn_bbox": 0.03637, "s0.loss_cls": 0.16812, "s0.acc": 94.76758, "s0.loss_bbox": 0.07787, "s1.loss_cls": 0.07491, "s1.acc": 95.64596, "s1.loss_bbox": 0.07143, "s2.loss_cls": 0.03572, "s2.acc": 95.85492, "s2.loss_bbox": 0.04692, "loss": 0.53057, "time": 1.49868}
{"mode": "train", "epoch": 13, "iter": 600, "lr": 1e-05, "memory": 27544, "data_time": 0.00764, "loss_rpn_cls": 0.01796, "loss_rpn_bbox": 0.03836, "s0.loss_cls": 0.15423, "s0.acc": 94.5957, "s0.loss_bbox": 0.07926, "s1.loss_cls": 0.06719, "s1.acc": 95.50547, "s1.loss_bbox": 0.08216, "s2.loss_cls": 0.03153, "s2.acc": 95.6248, "s2.loss_bbox": 0.0536, "loss": 0.5243, "time": 1.49983}
{"mode": "train", "epoch": 13, "iter": 650, "lr": 1e-05, "memory": 27544, "data_time": 0.00774, "loss_rpn_cls": 0.02055, "loss_rpn_bbox": 0.03836, "s0.loss_cls": 0.14995, "s0.acc": 94.98438, "s0.loss_bbox": 0.07727, "s1.loss_cls": 0.06497, "s1.acc": 95.84808, "s1.loss_bbox": 0.07989, "s2.loss_cls": 0.03216, "s2.acc": 95.60785, "s2.loss_bbox": 0.05156, "loss": 0.5147, "time": 1.51016}
{"mode": "train", "epoch": 13, "iter": 700, "lr": 1e-05, "memory": 27544, "data_time": 0.00754, "loss_rpn_cls": 0.02553, "loss_rpn_bbox": 0.05211, "s0.loss_cls": 0.18556, "s0.acc": 93.76758, "s0.loss_bbox": 0.09096, "s1.loss_cls": 0.08098, "s1.acc": 94.70706, "s1.loss_bbox": 0.08458, "s2.loss_cls": 0.03899, "s2.acc": 94.98698, "s2.loss_bbox": 0.05429, "loss": 0.61299, "time": 1.49459}
{"mode": "train", "epoch": 13, "iter": 750, "lr": 1e-05, "memory": 27544, "data_time": 0.00767, "loss_rpn_cls": 0.02343, "loss_rpn_bbox": 0.0557, "s0.loss_cls": 0.18403, "s0.acc": 94.01367, "s0.loss_bbox": 0.09622, "s1.loss_cls": 0.08227, "s1.acc": 94.63719, "s1.loss_bbox": 0.08648, "s2.loss_cls": 0.04094, "s2.acc": 94.70571, "s2.loss_bbox": 0.05142, "loss": 0.6205, "time": 1.49682}
{"mode": "train", "epoch": 13, "iter": 800, "lr": 1e-05, "memory": 27544, "data_time": 0.00756, "loss_rpn_cls": 0.03382, "loss_rpn_bbox": 0.0443, "s0.loss_cls": 0.1901, "s0.acc": 93.95703, "s0.loss_bbox": 0.08574, "s1.loss_cls": 0.09232, "s1.acc": 94.21473, "s1.loss_bbox": 0.08027, "s2.loss_cls": 0.04525, "s2.acc": 94.34539, "s2.loss_bbox": 0.05113, "loss": 0.62293, "time": 1.49709}
{"mode": "train", "epoch": 13, "iter": 850, "lr": 1e-05, "memory": 27544, "data_time": 0.00759, "loss_rpn_cls": 0.01774, "loss_rpn_bbox": 0.04089, "s0.loss_cls": 0.14696, "s0.acc": 94.9668, "s0.loss_bbox": 0.07852, "s1.loss_cls": 0.06613, "s1.acc": 95.67073, "s1.loss_bbox": 0.0729, "s2.loss_cls": 0.02961, "s2.acc": 96.06261, "s2.loss_bbox": 0.04525, "loss": 0.498, "time": 1.48932}
{"mode": "train", "epoch": 13, "iter": 900, "lr": 1e-05, "memory": 27544, "data_time": 0.00766, "loss_rpn_cls": 0.01475, "loss_rpn_bbox": 0.04365, "s0.loss_cls": 0.14534, "s0.acc": 95.04688, "s0.loss_bbox": 0.07135, "s1.loss_cls": 0.06437, "s1.acc": 95.9531, "s1.loss_bbox": 0.06988, "s2.loss_cls": 0.03039, "s2.acc": 96.04056, "s2.loss_bbox": 0.04687, "loss": 0.48661, "time": 1.49215}
{"mode": "train", "epoch": 13, "iter": 950, "lr": 1e-05, "memory": 27544, "data_time": 0.00753, "loss_rpn_cls": 0.01655, "loss_rpn_bbox": 0.046, "s0.loss_cls": 0.16288, "s0.acc": 94.37305, "s0.loss_bbox": 0.08671, "s1.loss_cls": 0.06916, "s1.acc": 95.35924, "s1.loss_bbox": 0.08301, "s2.loss_cls": 0.03421, "s2.acc": 95.19631, "s2.loss_bbox": 0.05316, "loss": 0.55168, "time": 1.4909}
{"mode": "train", "epoch": 13, "iter": 1000, "lr": 1e-05, "memory": 27544, "data_time": 0.0075, "loss_rpn_cls": 0.01786, "loss_rpn_bbox": 0.04854, "s0.loss_cls": 0.18807, "s0.acc": 93.62305, "s0.loss_bbox": 0.09785, "s1.loss_cls": 0.08566, "s1.acc": 94.4311, "s1.loss_bbox": 0.09704, "s2.loss_cls": 0.04201, "s2.acc": 94.28423, "s2.loss_bbox": 0.06198, "loss": 0.639, "time": 1.49263}
{"mode": "train", "epoch": 13, "iter": 1050, "lr": 1e-05, "memory": 27544, "data_time": 0.00754, "loss_rpn_cls": 0.01933, "loss_rpn_bbox": 0.04518, "s0.loss_cls": 0.16325, "s0.acc": 94.38477, "s0.loss_bbox": 0.08313, "s1.loss_cls": 0.07545, "s1.acc": 94.84993, "s1.loss_bbox": 0.0803, "s2.loss_cls": 0.03757, "s2.acc": 94.87537, "s2.loss_bbox": 0.05405, "loss": 0.55826, "time": 1.48888}
{"mode": "train", "epoch": 13, "iter": 1100, "lr": 1e-05, "memory": 27544, "data_time": 0.00755, "loss_rpn_cls": 0.018, "loss_rpn_bbox": 0.05049, "s0.loss_cls": 0.18868, "s0.acc": 93.66211, "s0.loss_bbox": 0.09343, "s1.loss_cls": 0.08987, "s1.acc": 94.35222, "s1.loss_bbox": 0.08758, "s2.loss_cls": 0.04477, "s2.acc": 94.44231, "s2.loss_bbox": 0.05127, "loss": 0.62408, "time": 1.4896}
{"mode": "train", "epoch": 13, "iter": 1150, "lr": 1e-05, "memory": 27544, "data_time": 0.00739, "loss_rpn_cls": 0.016, "loss_rpn_bbox": 0.04913, "s0.loss_cls": 0.17209, "s0.acc": 94.20312, "s0.loss_bbox": 0.09445, "s1.loss_cls": 0.08417, "s1.acc": 94.64189, "s1.loss_bbox": 0.08985, "s2.loss_cls": 0.04321, "s2.acc": 94.69258, "s2.loss_bbox": 0.05242, "loss": 0.60132, "time": 1.48013}
{"mode": "train", "epoch": 13, "iter": 1200, "lr": 1e-05, "memory": 27544, "data_time": 0.00747, "loss_rpn_cls": 0.02171, "loss_rpn_bbox": 0.04424, "s0.loss_cls": 0.16851, "s0.acc": 94.20898, "s0.loss_bbox": 0.09995, "s1.loss_cls": 0.07661, "s1.acc": 94.9456, "s1.loss_bbox": 0.09281, "s2.loss_cls": 0.03594, "s2.acc": 95.16026, "s2.loss_bbox": 0.05569, "loss": 0.59546, "time": 1.48829}
{"mode": "train", "epoch": 13, "iter": 1250, "lr": 1e-05, "memory": 27544, "data_time": 0.00743, "loss_rpn_cls": 0.01992, "loss_rpn_bbox": 0.05302, "s0.loss_cls": 0.1983, "s0.acc": 92.92969, "s0.loss_bbox": 0.11064, "s1.loss_cls": 0.09063, "s1.acc": 93.57812, "s1.loss_bbox": 0.11465, "s2.loss_cls": 0.0459, "s2.acc": 93.40286, "s2.loss_bbox": 0.06862, "loss": 0.70166, "time": 1.47407}
{"mode": "train", "epoch": 13, "iter": 1300, "lr": 1e-05, "memory": 27544, "data_time": 0.00711, "loss_rpn_cls": 0.02696, "loss_rpn_bbox": 0.0514, "s0.loss_cls": 0.17027, "s0.acc": 94.17773, "s0.loss_bbox": 0.09309, "s1.loss_cls": 0.07501, "s1.acc": 95.10583, "s1.loss_bbox": 0.09265, "s2.loss_cls": 0.03642, "s2.acc": 95.31429, "s2.loss_bbox": 0.05984, "loss": 0.60564, "time": 1.48847}
{"mode": "train", "epoch": 13, "iter": 1350, "lr": 1e-05, "memory": 27544, "data_time": 0.00699, "loss_rpn_cls": 0.02266, "loss_rpn_bbox": 0.05307, "s0.loss_cls": 0.18477, "s0.acc": 93.79688, "s0.loss_bbox": 0.09865, "s1.loss_cls": 0.08759, "s1.acc": 94.22388, "s1.loss_bbox": 0.0957, "s2.loss_cls": 0.04367, "s2.acc": 94.33163, "s2.loss_bbox": 0.05672, "loss": 0.64284, "time": 1.49513}
{"mode": "train", "epoch": 13, "iter": 1400, "lr": 1e-05, "memory": 27544, "data_time": 0.00684, "loss_rpn_cls": 0.03112, "loss_rpn_bbox": 0.04856, "s0.loss_cls": 0.18762, "s0.acc": 93.62695, "s0.loss_bbox": 0.09952, "s1.loss_cls": 0.0896, "s1.acc": 93.86933, "s1.loss_bbox": 0.10077, "s2.loss_cls": 0.04558, "s2.acc": 93.61837, "s2.loss_bbox": 0.06116, "loss": 0.66392, "time": 1.49234}
{"mode": "train", "epoch": 13, "iter": 1450, "lr": 1e-05, "memory": 27544, "data_time": 0.00697, "loss_rpn_cls": 0.0197, "loss_rpn_bbox": 0.04377, "s0.loss_cls": 0.1554, "s0.acc": 94.68164, "s0.loss_bbox": 0.08212, "s1.loss_cls": 0.06651, "s1.acc": 95.5184, "s1.loss_bbox": 0.07663, "s2.loss_cls": 0.03201, "s2.acc": 95.57801, "s2.loss_bbox": 0.05131, "loss": 0.52745, "time": 1.49201}
{"mode": "train", "epoch": 13, "iter": 1500, "lr": 1e-05, "memory": 27544, "data_time": 0.00696, "loss_rpn_cls": 0.01875, "loss_rpn_bbox": 0.04893, "s0.loss_cls": 0.17591, "s0.acc": 93.94727, "s0.loss_bbox": 0.10425, "s1.loss_cls": 0.07835, "s1.acc": 94.54457, "s1.loss_bbox": 0.09327, "s2.loss_cls": 0.03761, "s2.acc": 94.74765, "s2.loss_bbox": 0.05594, "loss": 0.61301, "time": 1.50477}
{"mode": "train", "epoch": 13, "iter": 1550, "lr": 1e-05, "memory": 27544, "data_time": 0.00705, "loss_rpn_cls": 0.01608, "loss_rpn_bbox": 0.04714, "s0.loss_cls": 0.15781, "s0.acc": 94.93359, "s0.loss_bbox": 0.08252, "s1.loss_cls": 0.06933, "s1.acc": 95.86822, "s1.loss_bbox": 0.07857, "s2.loss_cls": 0.0359, "s2.acc": 95.39558, "s2.loss_bbox": 0.05278, "loss": 0.54013, "time": 1.52429}
{"mode": "train", "epoch": 13, "iter": 1600, "lr": 1e-05, "memory": 27544, "data_time": 0.00693, "loss_rpn_cls": 0.01672, "loss_rpn_bbox": 0.04617, "s0.loss_cls": 0.16959, "s0.acc": 94.0918, "s0.loss_bbox": 0.08056, "s1.loss_cls": 0.07893, "s1.acc": 94.47154, "s1.loss_bbox": 0.07168, "s2.loss_cls": 0.03942, "s2.acc": 94.40736, "s2.loss_bbox": 0.04497, "loss": 0.54802, "time": 1.49525}
{"mode": "train", "epoch": 13, "iter": 1650, "lr": 1e-05, "memory": 27544, "data_time": 0.00694, "loss_rpn_cls": 0.01704, "loss_rpn_bbox": 0.04199, "s0.loss_cls": 0.17055, "s0.acc": 94.41992, "s0.loss_bbox": 0.09387, "s1.loss_cls": 0.07391, "s1.acc": 95.39858, "s1.loss_bbox": 0.091, "s2.loss_cls": 0.03539, "s2.acc": 95.53924, "s2.loss_bbox": 0.05807, "loss": 0.58183, "time": 1.49588}
{"mode": "train", "epoch": 13, "iter": 1700, "lr": 1e-05, "memory": 27544, "data_time": 0.00691, "loss_rpn_cls": 0.01657, "loss_rpn_bbox": 0.04266, "s0.loss_cls": 0.15124, "s0.acc": 94.76367, "s0.loss_bbox": 0.08577, "s1.loss_cls": 0.06469, "s1.acc": 95.69951, "s1.loss_bbox": 0.08444, "s2.loss_cls": 0.03037, "s2.acc": 95.72883, "s2.loss_bbox": 0.05284, "loss": 0.52858, "time": 1.50135}
{"mode": "train", "epoch": 13, "iter": 1750, "lr": 1e-05, "memory": 27544, "data_time": 0.00691, "loss_rpn_cls": 0.02077, "loss_rpn_bbox": 0.05198, "s0.loss_cls": 0.17666, "s0.acc": 94.01172, "s0.loss_bbox": 0.09409, "s1.loss_cls": 0.08144, "s1.acc": 94.43413, "s1.loss_bbox": 0.09604, "s2.loss_cls": 0.03946, "s2.acc": 94.87679, "s2.loss_bbox": 0.06082, "loss": 0.62127, "time": 1.49905}
{"mode": "train", "epoch": 13, "iter": 1800, "lr": 1e-05, "memory": 27544, "data_time": 0.00696, "loss_rpn_cls": 0.02194, "loss_rpn_bbox": 0.04427, "s0.loss_cls": 0.14025, "s0.acc": 95.12305, "s0.loss_bbox": 0.08236, "s1.loss_cls": 0.05963, "s1.acc": 95.91191, "s1.loss_bbox": 0.08633, "s2.loss_cls": 0.02805, "s2.acc": 96.2969, "s2.loss_bbox": 0.05159, "loss": 0.51444, "time": 1.49258}
{"mode": "train", "epoch": 13, "iter": 1850, "lr": 1e-05, "memory": 27544, "data_time": 0.0072, "loss_rpn_cls": 0.02547, "loss_rpn_bbox": 0.0468, "s0.loss_cls": 0.16496, "s0.acc": 94.43555, "s0.loss_bbox": 0.07817, "s1.loss_cls": 0.07344, "s1.acc": 95.19908, "s1.loss_bbox": 0.08179, "s2.loss_cls": 0.03516, "s2.acc": 95.37433, "s2.loss_bbox": 0.05584, "loss": 0.56163, "time": 1.50126}
{"mode": "train", "epoch": 13, "iter": 1900, "lr": 1e-05, "memory": 27544, "data_time": 0.00748, "loss_rpn_cls": 0.02734, "loss_rpn_bbox": 0.05665, "s0.loss_cls": 0.19208, "s0.acc": 94.05469, "s0.loss_bbox": 0.09663, "s1.loss_cls": 0.08469, "s1.acc": 95.08951, "s1.loss_bbox": 0.08879, "s2.loss_cls": 0.04092, "s2.acc": 95.15223, "s2.loss_bbox": 0.05645, "loss": 0.64354, "time": 1.49308}
{"mode": "train", "epoch": 13, "iter": 1950, "lr": 1e-05, "memory": 27544, "data_time": 0.00754, "loss_rpn_cls": 0.01989, "loss_rpn_bbox": 0.04342, "s0.loss_cls": 0.14264, "s0.acc": 95.16602, "s0.loss_bbox": 0.07403, "s1.loss_cls": 0.0612, "s1.acc": 96.01013, "s1.loss_bbox": 0.06825, "s2.loss_cls": 0.02848, "s2.acc": 96.44207, "s2.loss_bbox": 0.04384, "loss": 0.48176, "time": 1.49385}
{"mode": "train", "epoch": 13, "iter": 2000, "lr": 1e-05, "memory": 27544, "data_time": 0.00755, "loss_rpn_cls": 0.02345, "loss_rpn_bbox": 0.03416, "s0.loss_cls": 0.14154, "s0.acc": 95.20898, "s0.loss_bbox": 0.07179, "s1.loss_cls": 0.06298, "s1.acc": 96.0683, "s1.loss_bbox": 0.06723, "s2.loss_cls": 0.03105, "s2.acc": 95.95551, "s2.loss_bbox": 0.04418, "loss": 0.47637, "time": 1.49502}
{"mode": "train", "epoch": 13, "iter": 2050, "lr": 1e-05, "memory": 27544, "data_time": 0.00761, "loss_rpn_cls": 0.02031, "loss_rpn_bbox": 0.04934, "s0.loss_cls": 0.18453, "s0.acc": 93.5332, "s0.loss_bbox": 0.10477, "s1.loss_cls": 0.0854, "s1.acc": 94.1782, "s1.loss_bbox": 0.09986, "s2.loss_cls": 0.0436, "s2.acc": 94.33068, "s2.loss_bbox": 0.05993, "loss": 0.64774, "time": 1.49759}
{"mode": "train", "epoch": 13, "iter": 2100, "lr": 1e-05, "memory": 27544, "data_time": 0.00716, "loss_rpn_cls": 0.02017, "loss_rpn_bbox": 0.05124, "s0.loss_cls": 0.20063, "s0.acc": 93.15234, "s0.loss_bbox": 0.10667, "s1.loss_cls": 0.09376, "s1.acc": 93.81518, "s1.loss_bbox": 0.10184, "s2.loss_cls": 0.0477, "s2.acc": 93.88658, "s2.loss_bbox": 0.06218, "loss": 0.68419, "time": 1.49887}
{"mode": "train", "epoch": 13, "iter": 2150, "lr": 1e-05, "memory": 27544, "data_time": 0.00707, "loss_rpn_cls": 0.01818, "loss_rpn_bbox": 0.04028, "s0.loss_cls": 0.13754, "s0.acc": 94.90039, "s0.loss_bbox": 0.06941, "s1.loss_cls": 0.06078, "s1.acc": 95.62598, "s1.loss_bbox": 0.06607, "s2.loss_cls": 0.02952, "s2.acc": 95.74074, "s2.loss_bbox": 0.04276, "loss": 0.46454, "time": 1.4956}
{"mode": "train", "epoch": 13, "iter": 2200, "lr": 1e-05, "memory": 27544, "data_time": 0.00683, "loss_rpn_cls": 0.02232, "loss_rpn_bbox": 0.04137, "s0.loss_cls": 0.16529, "s0.acc": 94.50391, "s0.loss_bbox": 0.0815, "s1.loss_cls": 0.0707, "s1.acc": 95.28729, "s1.loss_bbox": 0.08384, "s2.loss_cls": 0.03529, "s2.acc": 95.5036, "s2.loss_bbox": 0.05563, "loss": 0.55594, "time": 1.49062}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 1e-05, "memory": 27544, "data_time": 0.00714, "loss_rpn_cls": 0.01755, "loss_rpn_bbox": 0.03806, "s0.loss_cls": 0.16379, "s0.acc": 94.59961, "s0.loss_bbox": 0.08021, "s1.loss_cls": 0.08059, "s1.acc": 94.94514, "s1.loss_bbox": 0.0741, "s2.loss_cls": 0.04101, "s2.acc": 94.82169, "s2.loss_bbox": 0.04517, "loss": 0.54049, "time": 1.50073}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 1e-05, "memory": 27544, "data_time": 0.00701, "loss_rpn_cls": 0.01761, "loss_rpn_bbox": 0.04721, "s0.loss_cls": 0.15992, "s0.acc": 94.54492, "s0.loss_bbox": 0.09133, "s1.loss_cls": 0.06763, "s1.acc": 95.40367, "s1.loss_bbox": 0.09325, "s2.loss_cls": 0.03464, "s2.acc": 95.26693, "s2.loss_bbox": 0.05907, "loss": 0.57068, "time": 1.50538}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 1e-05, "memory": 28072, "data_time": 0.00728, "loss_rpn_cls": 0.02246, "loss_rpn_bbox": 0.05158, "s0.loss_cls": 0.18953, "s0.acc": 93.63086, "s0.loss_bbox": 0.10152, "s1.loss_cls": 0.09121, "s1.acc": 93.97085, "s1.loss_bbox": 0.10353, "s2.loss_cls": 0.04768, "s2.acc": 93.70514, "s2.loss_bbox": 0.05629, "loss": 0.66381, "time": 1.50274}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 1e-05, "memory": 28072, "data_time": 0.0076, "loss_rpn_cls": 0.03078, "loss_rpn_bbox": 0.05055, "s0.loss_cls": 0.16987, "s0.acc": 94.11719, "s0.loss_bbox": 0.09487, "s1.loss_cls": 0.07487, "s1.acc": 94.89474, "s1.loss_bbox": 0.09607, "s2.loss_cls": 0.03625, "s2.acc": 95.02216, "s2.loss_bbox": 0.0598, "loss": 0.61307, "time": 1.4977}
{"mode": "val", "epoch": 13, "iter": 982, "lr": 1e-05, "bbox_mAP": 0.547, "bbox_mAP_50": 0.699, "bbox_mAP_75": 0.584, "bbox_mAP_s": 0.023, "bbox_mAP_m": 0.182, "bbox_mAP_l": 0.622, "bbox_mAP_copypaste": "0.547 0.699 0.584 0.023 0.182 0.622"}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 1e-05, "memory": 28072, "data_time": 0.05641, "loss_rpn_cls": 0.01941, "loss_rpn_bbox": 0.04395, "s0.loss_cls": 0.14289, "s0.acc": 95.01953, "s0.loss_bbox": 0.08321, "s1.loss_cls": 0.06204, "s1.acc": 95.74615, "s1.loss_bbox": 0.08216, "s2.loss_cls": 0.02999, "s2.acc": 96.05268, "s2.loss_bbox": 0.05335, "loss": 0.517, "time": 1.55127}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 1e-05, "memory": 28072, "data_time": 0.00773, "loss_rpn_cls": 0.02461, "loss_rpn_bbox": 0.03662, "s0.loss_cls": 0.13204, "s0.acc": 95.21289, "s0.loss_bbox": 0.07055, "s1.loss_cls": 0.05594, "s1.acc": 96.0652, "s1.loss_bbox": 0.07169, "s2.loss_cls": 0.02716, "s2.acc": 96.18893, "s2.loss_bbox": 0.05189, "loss": 0.47051, "time": 1.50193}
{"mode": "train", "epoch": 14, "iter": 150, "lr": 1e-05, "memory": 28072, "data_time": 0.0077, "loss_rpn_cls": 0.01874, "loss_rpn_bbox": 0.03804, "s0.loss_cls": 0.13977, "s0.acc": 95.16211, "s0.loss_bbox": 0.06981, "s1.loss_cls": 0.06291, "s1.acc": 95.73185, "s1.loss_bbox": 0.07093, "s2.loss_cls": 0.03239, "s2.acc": 95.73104, "s2.loss_bbox": 0.04364, "loss": 0.47622, "time": 1.49888}
{"mode": "train", "epoch": 14, "iter": 200, "lr": 1e-05, "memory": 28072, "data_time": 0.00768, "loss_rpn_cls": 0.0166, "loss_rpn_bbox": 0.03935, "s0.loss_cls": 0.15646, "s0.acc": 94.80273, "s0.loss_bbox": 0.08513, "s1.loss_cls": 0.07398, "s1.acc": 94.97362, "s1.loss_bbox": 0.08234, "s2.loss_cls": 0.03608, "s2.acc": 94.92586, "s2.loss_bbox": 0.05134, "loss": 0.54128, "time": 1.49628}
{"mode": "train", "epoch": 14, "iter": 250, "lr": 1e-05, "memory": 28072, "data_time": 0.00765, "loss_rpn_cls": 0.02698, "loss_rpn_bbox": 0.04603, "s0.loss_cls": 0.15947, "s0.acc": 94.35156, "s0.loss_bbox": 0.09485, "s1.loss_cls": 0.07016, "s1.acc": 95.23322, "s1.loss_bbox": 0.09534, "s2.loss_cls": 0.03489, "s2.acc": 95.14861, "s2.loss_bbox": 0.05969, "loss": 0.5874, "time": 1.48862}
{"mode": "train", "epoch": 14, "iter": 300, "lr": 1e-05, "memory": 28072, "data_time": 0.00769, "loss_rpn_cls": 0.02165, "loss_rpn_bbox": 0.05433, "s0.loss_cls": 0.19946, "s0.acc": 93.10938, "s0.loss_bbox": 0.10317, "s1.loss_cls": 0.08889, "s1.acc": 93.90104, "s1.loss_bbox": 0.09838, "s2.loss_cls": 0.04131, "s2.acc": 94.26388, "s2.loss_bbox": 0.05842, "loss": 0.66561, "time": 1.49678}
{"mode": "train", "epoch": 14, "iter": 350, "lr": 1e-05, "memory": 28072, "data_time": 0.00769, "loss_rpn_cls": 0.01468, "loss_rpn_bbox": 0.042, "s0.loss_cls": 0.16226, "s0.acc": 94.62695, "s0.loss_bbox": 0.0836, "s1.loss_cls": 0.07339, "s1.acc": 95.11738, "s1.loss_bbox": 0.08269, "s2.loss_cls": 0.03549, "s2.acc": 95.76548, "s2.loss_bbox": 0.05131, "loss": 0.54542, "time": 1.49716}
{"mode": "train", "epoch": 14, "iter": 400, "lr": 1e-05, "memory": 28072, "data_time": 0.00789, "loss_rpn_cls": 0.02741, "loss_rpn_bbox": 0.05408, "s0.loss_cls": 0.18787, "s0.acc": 93.86133, "s0.loss_bbox": 0.08863, "s1.loss_cls": 0.0835, "s1.acc": 94.64209, "s1.loss_bbox": 0.0793, "s2.loss_cls": 0.03953, "s2.acc": 95.01531, "s2.loss_bbox": 0.05008, "loss": 0.61039, "time": 1.50912}
{"mode": "train", "epoch": 14, "iter": 450, "lr": 1e-05, "memory": 28072, "data_time": 0.00763, "loss_rpn_cls": 0.02646, "loss_rpn_bbox": 0.04932, "s0.loss_cls": 0.15635, "s0.acc": 94.38477, "s0.loss_bbox": 0.08907, "s1.loss_cls": 0.06695, "s1.acc": 95.45013, "s1.loss_bbox": 0.08601, "s2.loss_cls": 0.03244, "s2.acc": 95.59606, "s2.loss_bbox": 0.05638, "loss": 0.56298, "time": 1.49449}
{"mode": "train", "epoch": 14, "iter": 500, "lr": 1e-05, "memory": 28072, "data_time": 0.00773, "loss_rpn_cls": 0.01947, "loss_rpn_bbox": 0.04848, "s0.loss_cls": 0.16342, "s0.acc": 94.38086, "s0.loss_bbox": 0.08677, "s1.loss_cls": 0.06851, "s1.acc": 95.32805, "s1.loss_bbox": 0.08692, "s2.loss_cls": 0.03294, "s2.acc": 95.38705, "s2.loss_bbox": 0.06037, "loss": 0.56688, "time": 1.49698}
{"mode": "train", "epoch": 14, "iter": 550, "lr": 1e-05, "memory": 28072, "data_time": 0.00775, "loss_rpn_cls": 0.01334, "loss_rpn_bbox": 0.0393, "s0.loss_cls": 0.12187, "s0.acc": 95.62891, "s0.loss_bbox": 0.06823, "s1.loss_cls": 0.05181, "s1.acc": 96.39687, "s1.loss_bbox": 0.0648, "s2.loss_cls": 0.0236, "s2.acc": 96.51118, "s2.loss_bbox": 0.03991, "loss": 0.42284, "time": 1.50082}
{"mode": "train", "epoch": 14, "iter": 600, "lr": 1e-05, "memory": 28072, "data_time": 0.0077, "loss_rpn_cls": 0.01759, "loss_rpn_bbox": 0.04981, "s0.loss_cls": 0.1541, "s0.acc": 94.82617, "s0.loss_bbox": 0.07721, "s1.loss_cls": 0.06888, "s1.acc": 95.69407, "s1.loss_bbox": 0.07463, "s2.loss_cls": 0.03585, "s2.acc": 95.52932, "s2.loss_bbox": 0.04825, "loss": 0.52631, "time": 1.49432}
{"mode": "train", "epoch": 14, "iter": 650, "lr": 1e-05, "memory": 28072, "data_time": 0.00774, "loss_rpn_cls": 0.01468, "loss_rpn_bbox": 0.04071, "s0.loss_cls": 0.15577, "s0.acc": 94.66211, "s0.loss_bbox": 0.078, "s1.loss_cls": 0.07045, "s1.acc": 95.31416, "s1.loss_bbox": 0.08203, "s2.loss_cls": 0.0352, "s2.acc": 95.46395, "s2.loss_bbox": 0.05556, "loss": 0.53241, "time": 1.49184}
{"mode": "train", "epoch": 14, "iter": 700, "lr": 1e-05, "memory": 28072, "data_time": 0.00772, "loss_rpn_cls": 0.02093, "loss_rpn_bbox": 0.04443, "s0.loss_cls": 0.163, "s0.acc": 94.19727, "s0.loss_bbox": 0.08727, "s1.loss_cls": 0.0715, "s1.acc": 94.81211, "s1.loss_bbox": 0.08556, "s2.loss_cls": 0.03717, "s2.acc": 94.60501, "s2.loss_bbox": 0.04903, "loss": 0.55889, "time": 1.50314}
{"mode": "train", "epoch": 14, "iter": 750, "lr": 1e-05, "memory": 28072, "data_time": 0.00789, "loss_rpn_cls": 0.01718, "loss_rpn_bbox": 0.04303, "s0.loss_cls": 0.14689, "s0.acc": 95.0293, "s0.loss_bbox": 0.07818, "s1.loss_cls": 0.06536, "s1.acc": 95.80329, "s1.loss_bbox": 0.07767, "s2.loss_cls": 0.03164, "s2.acc": 95.78312, "s2.loss_bbox": 0.05035, "loss": 0.5103, "time": 1.50171}
{"mode": "train", "epoch": 14, "iter": 800, "lr": 1e-05, "memory": 28072, "data_time": 0.00775, "loss_rpn_cls": 0.01808, "loss_rpn_bbox": 0.04713, "s0.loss_cls": 0.14987, "s0.acc": 94.56836, "s0.loss_bbox": 0.08731, "s1.loss_cls": 0.06526, "s1.acc": 95.16676, "s1.loss_bbox": 0.08487, "s2.loss_cls": 0.03117, "s2.acc": 95.45959, "s2.loss_bbox": 0.05446, "loss": 0.53815, "time": 1.49321}
{"mode": "train", "epoch": 14, "iter": 850, "lr": 1e-05, "memory": 28072, "data_time": 0.00778, "loss_rpn_cls": 0.01758, "loss_rpn_bbox": 0.04605, "s0.loss_cls": 0.17868, "s0.acc": 93.6582, "s0.loss_bbox": 0.09555, "s1.loss_cls": 0.08008, "s1.acc": 94.3427, "s1.loss_bbox": 0.09095, "s2.loss_cls": 0.03858, "s2.acc": 94.32055, "s2.loss_bbox": 0.05344, "loss": 0.6009, "time": 1.48739}
{"mode": "train", "epoch": 14, "iter": 900, "lr": 1e-05, "memory": 28072, "data_time": 0.00783, "loss_rpn_cls": 0.01845, "loss_rpn_bbox": 0.04928, "s0.loss_cls": 0.19018, "s0.acc": 93.47461, "s0.loss_bbox": 0.09793, "s1.loss_cls": 0.08721, "s1.acc": 93.96082, "s1.loss_bbox": 0.09395, "s2.loss_cls": 0.04244, "s2.acc": 93.90007, "s2.loss_bbox": 0.05773, "loss": 0.63717, "time": 1.4958}
{"mode": "train", "epoch": 14, "iter": 950, "lr": 1e-05, "memory": 28072, "data_time": 0.00784, "loss_rpn_cls": 0.01609, "loss_rpn_bbox": 0.0433, "s0.loss_cls": 0.14568, "s0.acc": 94.87695, "s0.loss_bbox": 0.07758, "s1.loss_cls": 0.0646, "s1.acc": 95.60342, "s1.loss_bbox": 0.07667, "s2.loss_cls": 0.03224, "s2.acc": 95.53282, "s2.loss_bbox": 0.04892, "loss": 0.50509, "time": 1.50086}
{"mode": "train", "epoch": 14, "iter": 1000, "lr": 1e-05, "memory": 28072, "data_time": 0.00771, "loss_rpn_cls": 0.01499, "loss_rpn_bbox": 0.03921, "s0.loss_cls": 0.14351, "s0.acc": 95.32227, "s0.loss_bbox": 0.07365, "s1.loss_cls": 0.06515, "s1.acc": 95.71089, "s1.loss_bbox": 0.08067, "s2.loss_cls": 0.0291, "s2.acc": 95.99167, "s2.loss_bbox": 0.05066, "loss": 0.49695, "time": 1.49496}
{"mode": "train", "epoch": 14, "iter": 1050, "lr": 1e-05, "memory": 28072, "data_time": 0.00789, "loss_rpn_cls": 0.01666, "loss_rpn_bbox": 0.04474, "s0.loss_cls": 0.15118, "s0.acc": 94.85156, "s0.loss_bbox": 0.08494, "s1.loss_cls": 0.06171, "s1.acc": 95.83141, "s1.loss_bbox": 0.07624, "s2.loss_cls": 0.02909, "s2.acc": 96.0236, "s2.loss_bbox": 0.04779, "loss": 0.51235, "time": 1.49677}
{"mode": "train", "epoch": 14, "iter": 1100, "lr": 1e-05, "memory": 28072, "data_time": 0.00768, "loss_rpn_cls": 0.02762, "loss_rpn_bbox": 0.05188, "s0.loss_cls": 0.15893, "s0.acc": 94.37695, "s0.loss_bbox": 0.08871, "s1.loss_cls": 0.07428, "s1.acc": 94.87554, "s1.loss_bbox": 0.08633, "s2.loss_cls": 0.03519, "s2.acc": 95.30369, "s2.loss_bbox": 0.05291, "loss": 0.57587, "time": 1.4888}
{"mode": "train", "epoch": 14, "iter": 1150, "lr": 1e-05, "memory": 28072, "data_time": 0.0075, "loss_rpn_cls": 0.01771, "loss_rpn_bbox": 0.04203, "s0.loss_cls": 0.15955, "s0.acc": 94.14258, "s0.loss_bbox": 0.08544, "s1.loss_cls": 0.07078, "s1.acc": 94.62386, "s1.loss_bbox": 0.08954, "s2.loss_cls": 0.03482, "s2.acc": 94.76532, "s2.loss_bbox": 0.05283, "loss": 0.55268, "time": 1.48754}
{"mode": "train", "epoch": 14, "iter": 1200, "lr": 1e-05, "memory": 28072, "data_time": 0.00769, "loss_rpn_cls": 0.01462, "loss_rpn_bbox": 0.04039, "s0.loss_cls": 0.14291, "s0.acc": 94.87109, "s0.loss_bbox": 0.07465, "s1.loss_cls": 0.06544, "s1.acc": 95.29462, "s1.loss_bbox": 0.07462, "s2.loss_cls": 0.03049, "s2.acc": 95.79611, "s2.loss_bbox": 0.04785, "loss": 0.49098, "time": 1.49579}
{"mode": "train", "epoch": 14, "iter": 1250, "lr": 1e-05, "memory": 28072, "data_time": 0.00771, "loss_rpn_cls": 0.01695, "loss_rpn_bbox": 0.03932, "s0.loss_cls": 0.1569, "s0.acc": 94.5625, "s0.loss_bbox": 0.08262, "s1.loss_cls": 0.07044, "s1.acc": 94.88115, "s1.loss_bbox": 0.08203, "s2.loss_cls": 0.03421, "s2.acc": 95.28802, "s2.loss_bbox": 0.05526, "loss": 0.53774, "time": 1.50075}
{"mode": "train", "epoch": 14, "iter": 1300, "lr": 1e-05, "memory": 28072, "data_time": 0.00766, "loss_rpn_cls": 0.01697, "loss_rpn_bbox": 0.05684, "s0.loss_cls": 0.19353, "s0.acc": 93.33984, "s0.loss_bbox": 0.11104, "s1.loss_cls": 0.08741, "s1.acc": 94.00372, "s1.loss_bbox": 0.10154, "s2.loss_cls": 0.04337, "s2.acc": 94.10834, "s2.loss_bbox": 0.06035, "loss": 0.67104, "time": 1.49649}
{"mode": "train", "epoch": 14, "iter": 1350, "lr": 1e-05, "memory": 28072, "data_time": 0.00775, "loss_rpn_cls": 0.01899, "loss_rpn_bbox": 0.04716, "s0.loss_cls": 0.16115, "s0.acc": 94.11328, "s0.loss_bbox": 0.09298, "s1.loss_cls": 0.07062, "s1.acc": 94.97482, "s1.loss_bbox": 0.09196, "s2.loss_cls": 0.03475, "s2.acc": 94.91727, "s2.loss_bbox": 0.05938, "loss": 0.57698, "time": 1.49329}
{"mode": "train", "epoch": 14, "iter": 1400, "lr": 1e-05, "memory": 28083, "data_time": 0.0078, "loss_rpn_cls": 0.01829, "loss_rpn_bbox": 0.0341, "s0.loss_cls": 0.15333, "s0.acc": 94.70117, "s0.loss_bbox": 0.07898, "s1.loss_cls": 0.0626, "s1.acc": 95.72017, "s1.loss_bbox": 0.07834, "s2.loss_cls": 0.0291, "s2.acc": 96.09998, "s2.loss_bbox": 0.05312, "loss": 0.50785, "time": 1.49119}
{"mode": "train", "epoch": 14, "iter": 1450, "lr": 1e-05, "memory": 28083, "data_time": 0.00769, "loss_rpn_cls": 0.01767, "loss_rpn_bbox": 0.04464, "s0.loss_cls": 0.19484, "s0.acc": 93.74805, "s0.loss_bbox": 0.09895, "s1.loss_cls": 0.0862, "s1.acc": 94.50788, "s1.loss_bbox": 0.0893, "s2.loss_cls": 0.04247, "s2.acc": 94.50866, "s2.loss_bbox": 0.05195, "loss": 0.62602, "time": 1.48725}
{"mode": "train", "epoch": 14, "iter": 1500, "lr": 1e-05, "memory": 28083, "data_time": 0.00773, "loss_rpn_cls": 0.02917, "loss_rpn_bbox": 0.0597, "s0.loss_cls": 0.18465, "s0.acc": 93.57617, "s0.loss_bbox": 0.10549, "s1.loss_cls": 0.08163, "s1.acc": 94.45173, "s1.loss_bbox": 0.10512, "s2.loss_cls": 0.03971, "s2.acc": 94.35248, "s2.loss_bbox": 0.06381, "loss": 0.66928, "time": 1.49627}
{"mode": "train", "epoch": 14, "iter": 1550, "lr": 1e-05, "memory": 28083, "data_time": 0.0077, "loss_rpn_cls": 0.01158, "loss_rpn_bbox": 0.0348, "s0.loss_cls": 0.15334, "s0.acc": 94.75195, "s0.loss_bbox": 0.0827, "s1.loss_cls": 0.06978, "s1.acc": 95.47428, "s1.loss_bbox": 0.07954, "s2.loss_cls": 0.03478, "s2.acc": 95.21367, "s2.loss_bbox": 0.04443, "loss": 0.51096, "time": 1.48539}
{"mode": "train", "epoch": 14, "iter": 1600, "lr": 1e-05, "memory": 28083, "data_time": 0.00774, "loss_rpn_cls": 0.02085, "loss_rpn_bbox": 0.04262, "s0.loss_cls": 0.16416, "s0.acc": 94.25, "s0.loss_bbox": 0.09266, "s1.loss_cls": 0.07121, "s1.acc": 95.10007, "s1.loss_bbox": 0.08667, "s2.loss_cls": 0.03461, "s2.acc": 95.06511, "s2.loss_bbox": 0.05619, "loss": 0.56896, "time": 1.48852}
{"mode": "train", "epoch": 14, "iter": 1650, "lr": 1e-05, "memory": 28083, "data_time": 0.00752, "loss_rpn_cls": 0.01943, "loss_rpn_bbox": 0.03497, "s0.loss_cls": 0.12891, "s0.acc": 95.47461, "s0.loss_bbox": 0.07468, "s1.loss_cls": 0.05835, "s1.acc": 95.91568, "s1.loss_bbox": 0.07573, "s2.loss_cls": 0.02905, "s2.acc": 96.00188, "s2.loss_bbox": 0.04884, "loss": 0.46995, "time": 1.49119}
{"mode": "train", "epoch": 14, "iter": 1700, "lr": 1e-05, "memory": 28083, "data_time": 0.00763, "loss_rpn_cls": 0.0168, "loss_rpn_bbox": 0.03471, "s0.loss_cls": 0.145, "s0.acc": 95.11328, "s0.loss_bbox": 0.06887, "s1.loss_cls": 0.06237, "s1.acc": 96.03027, "s1.loss_bbox": 0.07419, "s2.loss_cls": 0.02952, "s2.acc": 96.24192, "s2.loss_bbox": 0.05147, "loss": 0.48293, "time": 1.49305}
{"mode": "train", "epoch": 14, "iter": 1750, "lr": 1e-05, "memory": 28083, "data_time": 0.00749, "loss_rpn_cls": 0.01999, "loss_rpn_bbox": 0.03785, "s0.loss_cls": 0.15039, "s0.acc": 94.72656, "s0.loss_bbox": 0.08313, "s1.loss_cls": 0.07045, "s1.acc": 94.96904, "s1.loss_bbox": 0.08512, "s2.loss_cls": 0.03528, "s2.acc": 95.10529, "s2.loss_bbox": 0.05118, "loss": 0.53338, "time": 1.48876}
{"mode": "train", "epoch": 14, "iter": 1800, "lr": 1e-05, "memory": 28083, "data_time": 0.00771, "loss_rpn_cls": 0.01724, "loss_rpn_bbox": 0.03899, "s0.loss_cls": 0.1464, "s0.acc": 94.76758, "s0.loss_bbox": 0.07799, "s1.loss_cls": 0.06383, "s1.acc": 95.19558, "s1.loss_bbox": 0.07479, "s2.loss_cls": 0.03067, "s2.acc": 95.38968, "s2.loss_bbox": 0.04812, "loss": 0.49802, "time": 1.48796}
{"mode": "train", "epoch": 14, "iter": 1850, "lr": 1e-05, "memory": 28083, "data_time": 0.00767, "loss_rpn_cls": 0.01974, "loss_rpn_bbox": 0.04381, "s0.loss_cls": 0.14644, "s0.acc": 94.55078, "s0.loss_bbox": 0.08707, "s1.loss_cls": 0.06465, "s1.acc": 95.34843, "s1.loss_bbox": 0.08327, "s2.loss_cls": 0.03257, "s2.acc": 95.19618, "s2.loss_bbox": 0.05142, "loss": 0.52897, "time": 1.49538}
{"mode": "train", "epoch": 14, "iter": 1900, "lr": 1e-05, "memory": 28083, "data_time": 0.00768, "loss_rpn_cls": 0.01965, "loss_rpn_bbox": 0.0548, "s0.loss_cls": 0.17547, "s0.acc": 93.625, "s0.loss_bbox": 0.10128, "s1.loss_cls": 0.07912, "s1.acc": 94.44207, "s1.loss_bbox": 0.1024, "s2.loss_cls": 0.04075, "s2.acc": 94.54479, "s2.loss_bbox": 0.06221, "loss": 0.63569, "time": 1.48917}
{"mode": "train", "epoch": 14, "iter": 1950, "lr": 1e-05, "memory": 28083, "data_time": 0.00755, "loss_rpn_cls": 0.024, "loss_rpn_bbox": 0.04449, "s0.loss_cls": 0.15317, "s0.acc": 94.9043, "s0.loss_bbox": 0.08565, "s1.loss_cls": 0.06533, "s1.acc": 95.77021, "s1.loss_bbox": 0.08179, "s2.loss_cls": 0.02989, "s2.acc": 96.21333, "s2.loss_bbox": 0.05148, "loss": 0.53579, "time": 1.48953}
{"mode": "train", "epoch": 14, "iter": 2000, "lr": 1e-05, "memory": 28083, "data_time": 0.00763, "loss_rpn_cls": 0.01995, "loss_rpn_bbox": 0.04324, "s0.loss_cls": 0.15124, "s0.acc": 94.69531, "s0.loss_bbox": 0.08348, "s1.loss_cls": 0.06547, "s1.acc": 95.65205, "s1.loss_bbox": 0.08209, "s2.loss_cls": 0.03074, "s2.acc": 95.71086, "s2.loss_bbox": 0.05105, "loss": 0.52725, "time": 1.48368}
{"mode": "train", "epoch": 14, "iter": 2050, "lr": 1e-05, "memory": 28083, "data_time": 0.00782, "loss_rpn_cls": 0.01733, "loss_rpn_bbox": 0.04475, "s0.loss_cls": 0.13682, "s0.acc": 95.21289, "s0.loss_bbox": 0.08205, "s1.loss_cls": 0.06323, "s1.acc": 95.49391, "s1.loss_bbox": 0.08468, "s2.loss_cls": 0.03051, "s2.acc": 95.56582, "s2.loss_bbox": 0.05404, "loss": 0.5134, "time": 1.49198}
{"mode": "train", "epoch": 14, "iter": 2100, "lr": 1e-05, "memory": 28083, "data_time": 0.00777, "loss_rpn_cls": 0.02036, "loss_rpn_bbox": 0.04834, "s0.loss_cls": 0.16685, "s0.acc": 93.98633, "s0.loss_bbox": 0.0997, "s1.loss_cls": 0.07606, "s1.acc": 94.59635, "s1.loss_bbox": 0.10051, "s2.loss_cls": 0.03761, "s2.acc": 94.41699, "s2.loss_bbox": 0.06064, "loss": 0.61007, "time": 1.49531}
{"mode": "train", "epoch": 14, "iter": 2150, "lr": 1e-05, "memory": 28083, "data_time": 0.00769, "loss_rpn_cls": 0.02059, "loss_rpn_bbox": 0.05443, "s0.loss_cls": 0.19765, "s0.acc": 93.10547, "s0.loss_bbox": 0.11426, "s1.loss_cls": 0.08864, "s1.acc": 93.82558, "s1.loss_bbox": 0.11219, "s2.loss_cls": 0.04278, "s2.acc": 93.9529, "s2.loss_bbox": 0.07028, "loss": 0.70082, "time": 1.49314}
{"mode": "train", "epoch": 14, "iter": 2200, "lr": 1e-05, "memory": 28083, "data_time": 0.00771, "loss_rpn_cls": 0.021, "loss_rpn_bbox": 0.04667, "s0.loss_cls": 0.14242, "s0.acc": 94.8457, "s0.loss_bbox": 0.08206, "s1.loss_cls": 0.06239, "s1.acc": 95.58624, "s1.loss_bbox": 0.07979, "s2.loss_cls": 0.031, "s2.acc": 95.54676, "s2.loss_bbox": 0.05223, "loss": 0.51756, "time": 1.49362}
{"mode": "train", "epoch": 14, "iter": 2250, "lr": 1e-05, "memory": 28083, "data_time": 0.00763, "loss_rpn_cls": 0.01143, "loss_rpn_bbox": 0.03675, "s0.loss_cls": 0.12741, "s0.acc": 95.65234, "s0.loss_bbox": 0.06638, "s1.loss_cls": 0.05378, "s1.acc": 96.35196, "s1.loss_bbox": 0.06523, "s2.loss_cls": 0.02572, "s2.acc": 96.53336, "s2.loss_bbox": 0.04405, "loss": 0.43075, "time": 1.49091}
{"mode": "train", "epoch": 14, "iter": 2300, "lr": 1e-05, "memory": 28083, "data_time": 0.00752, "loss_rpn_cls": 0.01539, "loss_rpn_bbox": 0.04, "s0.loss_cls": 0.16163, "s0.acc": 94.77344, "s0.loss_bbox": 0.08336, "s1.loss_cls": 0.06991, "s1.acc": 95.4815, "s1.loss_bbox": 0.08148, "s2.loss_cls": 0.03113, "s2.acc": 96.04945, "s2.loss_bbox": 0.04797, "loss": 0.53086, "time": 1.48288}
{"mode": "train", "epoch": 14, "iter": 2350, "lr": 1e-05, "memory": 28083, "data_time": 0.00755, "loss_rpn_cls": 0.01855, "loss_rpn_bbox": 0.04704, "s0.loss_cls": 0.16743, "s0.acc": 94.05273, "s0.loss_bbox": 0.09113, "s1.loss_cls": 0.07268, "s1.acc": 94.86533, "s1.loss_bbox": 0.08908, "s2.loss_cls": 0.03413, "s2.acc": 95.12351, "s2.loss_bbox": 0.06073, "loss": 0.58077, "time": 1.49016}
{"mode": "train", "epoch": 14, "iter": 2400, "lr": 1e-05, "memory": 28083, "data_time": 0.00765, "loss_rpn_cls": 0.0183, "loss_rpn_bbox": 0.04512, "s0.loss_cls": 0.16669, "s0.acc": 94.30859, "s0.loss_bbox": 0.09055, "s1.loss_cls": 0.07533, "s1.acc": 95.03324, "s1.loss_bbox": 0.08762, "s2.loss_cls": 0.03499, "s2.acc": 95.24795, "s2.loss_bbox": 0.05414, "loss": 0.57274, "time": 1.48817}
{"mode": "val", "epoch": 14, "iter": 982, "lr": 1e-05, "bbox_mAP": 0.57, "bbox_mAP_50": 0.723, "bbox_mAP_75": 0.611, "bbox_mAP_s": 0.026, "bbox_mAP_m": 0.211, "bbox_mAP_l": 0.645, "bbox_mAP_copypaste": "0.570 0.723 0.611 0.026 0.211 0.645"}
{"mode": "train", "epoch": 15, "iter": 50, "lr": 0.0, "memory": 28083, "data_time": 0.05617, "loss_rpn_cls": 0.01713, "loss_rpn_bbox": 0.04778, "s0.loss_cls": 0.16353, "s0.acc": 94.38672, "s0.loss_bbox": 0.09241, "s1.loss_cls": 0.07307, "s1.acc": 95.21569, "s1.loss_bbox": 0.08831, "s2.loss_cls": 0.03509, "s2.acc": 95.47176, "s2.loss_bbox": 0.05796, "loss": 0.57527, "time": 1.53919}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 0.0, "memory": 28083, "data_time": 0.00747, "loss_rpn_cls": 0.03011, "loss_rpn_bbox": 0.05063, "s0.loss_cls": 0.17051, "s0.acc": 94.07227, "s0.loss_bbox": 0.09266, "s1.loss_cls": 0.07635, "s1.acc": 94.73181, "s1.loss_bbox": 0.08887, "s2.loss_cls": 0.03715, "s2.acc": 94.98828, "s2.loss_bbox": 0.05295, "loss": 0.59925, "time": 1.49146}
{"mode": "train", "epoch": 15, "iter": 150, "lr": 0.0, "memory": 28083, "data_time": 0.00758, "loss_rpn_cls": 0.01803, "loss_rpn_bbox": 0.04968, "s0.loss_cls": 0.1441, "s0.acc": 94.90234, "s0.loss_bbox": 0.08372, "s1.loss_cls": 0.06045, "s1.acc": 95.76956, "s1.loss_bbox": 0.07933, "s2.loss_cls": 0.02856, "s2.acc": 95.95273, "s2.loss_bbox": 0.0492, "loss": 0.51308, "time": 1.48672}
{"mode": "train", "epoch": 15, "iter": 200, "lr": 0.0, "memory": 28083, "data_time": 0.00779, "loss_rpn_cls": 0.01686, "loss_rpn_bbox": 0.04109, "s0.loss_cls": 0.15202, "s0.acc": 94.85742, "s0.loss_bbox": 0.08256, "s1.loss_cls": 0.06202, "s1.acc": 95.80567, "s1.loss_bbox": 0.0761, "s2.loss_cls": 0.02774, "s2.acc": 96.32561, "s2.loss_bbox": 0.04681, "loss": 0.50521, "time": 1.49687}
{"mode": "train", "epoch": 15, "iter": 250, "lr": 0.0, "memory": 28083, "data_time": 0.00761, "loss_rpn_cls": 0.02048, "loss_rpn_bbox": 0.05113, "s0.loss_cls": 0.16412, "s0.acc": 94.0293, "s0.loss_bbox": 0.0992, "s1.loss_cls": 0.07503, "s1.acc": 94.72996, "s1.loss_bbox": 0.10045, "s2.loss_cls": 0.03526, "s2.acc": 94.85387, "s2.loss_bbox": 0.06327, "loss": 0.60895, "time": 1.48911}
{"mode": "train", "epoch": 15, "iter": 300, "lr": 0.0, "memory": 28083, "data_time": 0.00742, "loss_rpn_cls": 0.01474, "loss_rpn_bbox": 0.04366, "s0.loss_cls": 0.1552, "s0.acc": 94.48242, "s0.loss_bbox": 0.08907, "s1.loss_cls": 0.06804, "s1.acc": 95.24789, "s1.loss_bbox": 0.09109, "s2.loss_cls": 0.03342, "s2.acc": 95.13833, "s2.loss_bbox": 0.05735, "loss": 0.55256, "time": 1.47868}
{"mode": "train", "epoch": 15, "iter": 350, "lr": 0.0, "memory": 28083, "data_time": 0.00754, "loss_rpn_cls": 0.01781, "loss_rpn_bbox": 0.04363, "s0.loss_cls": 0.15655, "s0.acc": 94.31055, "s0.loss_bbox": 0.09334, "s1.loss_cls": 0.06561, "s1.acc": 95.54852, "s1.loss_bbox": 0.09869, "s2.loss_cls": 0.03245, "s2.acc": 95.56833, "s2.loss_bbox": 0.06399, "loss": 0.57207, "time": 1.47975}
{"mode": "train", "epoch": 15, "iter": 400, "lr": 0.0, "memory": 28083, "data_time": 0.00774, "loss_rpn_cls": 0.01571, "loss_rpn_bbox": 0.04944, "s0.loss_cls": 0.17041, "s0.acc": 94.08984, "s0.loss_bbox": 0.09595, "s1.loss_cls": 0.07901, "s1.acc": 94.55942, "s1.loss_bbox": 0.09013, "s2.loss_cls": 0.03763, "s2.acc": 94.54799, "s2.loss_bbox": 0.05522, "loss": 0.59351, "time": 1.48877}
{"mode": "train", "epoch": 15, "iter": 450, "lr": 0.0, "memory": 28083, "data_time": 0.00755, "loss_rpn_cls": 0.01593, "loss_rpn_bbox": 0.0387, "s0.loss_cls": 0.12369, "s0.acc": 95.68945, "s0.loss_bbox": 0.0688, "s1.loss_cls": 0.05309, "s1.acc": 96.2312, "s1.loss_bbox": 0.06904, "s2.loss_cls": 0.02572, "s2.acc": 96.29913, "s2.loss_bbox": 0.04389, "loss": 0.43886, "time": 1.48969}
{"mode": "train", "epoch": 15, "iter": 500, "lr": 0.0, "memory": 28083, "data_time": 0.00745, "loss_rpn_cls": 0.02668, "loss_rpn_bbox": 0.04224, "s0.loss_cls": 0.17913, "s0.acc": 93.94336, "s0.loss_bbox": 0.08715, "s1.loss_cls": 0.0774, "s1.acc": 94.74014, "s1.loss_bbox": 0.08766, "s2.loss_cls": 0.0367, "s2.acc": 94.93253, "s2.loss_bbox": 0.05406, "loss": 0.59103, "time": 1.48891}
{"mode": "train", "epoch": 15, "iter": 550, "lr": 0.0, "memory": 28083, "data_time": 0.00754, "loss_rpn_cls": 0.02205, "loss_rpn_bbox": 0.04856, "s0.loss_cls": 0.1502, "s0.acc": 94.72266, "s0.loss_bbox": 0.09653, "s1.loss_cls": 0.06474, "s1.acc": 95.43655, "s1.loss_bbox": 0.09345, "s2.loss_cls": 0.03139, "s2.acc": 95.6508, "s2.loss_bbox": 0.05592, "loss": 0.56283, "time": 1.4908}
{"mode": "train", "epoch": 15, "iter": 600, "lr": 0.0, "memory": 28083, "data_time": 0.00761, "loss_rpn_cls": 0.01634, "loss_rpn_bbox": 0.03377, "s0.loss_cls": 0.13625, "s0.acc": 95.23633, "s0.loss_bbox": 0.0785, "s1.loss_cls": 0.05882, "s1.acc": 95.79642, "s1.loss_bbox": 0.08195, "s2.loss_cls": 0.02811, "s2.acc": 96.04678, "s2.loss_bbox": 0.05483, "loss": 0.48856, "time": 1.48344}
{"mode": "train", "epoch": 15, "iter": 650, "lr": 0.0, "memory": 28083, "data_time": 0.00756, "loss_rpn_cls": 0.01566, "loss_rpn_bbox": 0.04644, "s0.loss_cls": 0.16232, "s0.acc": 94.46484, "s0.loss_bbox": 0.08289, "s1.loss_cls": 0.07059, "s1.acc": 95.36027, "s1.loss_bbox": 0.08216, "s2.loss_cls": 0.03515, "s2.acc": 95.32303, "s2.loss_bbox": 0.05621, "loss": 0.55142, "time": 1.4887}
{"mode": "train", "epoch": 15, "iter": 700, "lr": 0.0, "memory": 28083, "data_time": 0.00747, "loss_rpn_cls": 0.02376, "loss_rpn_bbox": 0.04803, "s0.loss_cls": 0.15542, "s0.acc": 94.55859, "s0.loss_bbox": 0.0834, "s1.loss_cls": 0.06893, "s1.acc": 95.42309, "s1.loss_bbox": 0.08869, "s2.loss_cls": 0.03421, "s2.acc": 95.24721, "s2.loss_bbox": 0.06304, "loss": 0.56549, "time": 1.48897}
{"mode": "train", "epoch": 15, "iter": 750, "lr": 0.0, "memory": 28083, "data_time": 0.00772, "loss_rpn_cls": 0.01777, "loss_rpn_bbox": 0.03418, "s0.loss_cls": 0.12457, "s0.acc": 95.6543, "s0.loss_bbox": 0.06178, "s1.loss_cls": 0.05334, "s1.acc": 96.43261, "s1.loss_bbox": 0.0637, "s2.loss_cls": 0.02624, "s2.acc": 96.2188, "s2.loss_bbox": 0.04511, "loss": 0.42667, "time": 1.48582}
{"mode": "train", "epoch": 15, "iter": 800, "lr": 0.0, "memory": 28083, "data_time": 0.00759, "loss_rpn_cls": 0.024, "loss_rpn_bbox": 0.05075, "s0.loss_cls": 0.138, "s0.acc": 95.15234, "s0.loss_bbox": 0.08618, "s1.loss_cls": 0.05834, "s1.acc": 96.13394, "s1.loss_bbox": 0.08784, "s2.loss_cls": 0.02798, "s2.acc": 96.27498, "s2.loss_bbox": 0.05821, "loss": 0.53129, "time": 1.48836}
{"mode": "train", "epoch": 15, "iter": 850, "lr": 0.0, "memory": 28083, "data_time": 0.00769, "loss_rpn_cls": 0.01708, "loss_rpn_bbox": 0.04436, "s0.loss_cls": 0.15385, "s0.acc": 94.80078, "s0.loss_bbox": 0.08685, "s1.loss_cls": 0.06601, "s1.acc": 95.59805, "s1.loss_bbox": 0.08778, "s2.loss_cls": 0.02974, "s2.acc": 96.15388, "s2.loss_bbox": 0.05382, "loss": 0.53949, "time": 1.48886}
{"mode": "train", "epoch": 15, "iter": 900, "lr": 0.0, "memory": 28083, "data_time": 0.00781, "loss_rpn_cls": 0.01179, "loss_rpn_bbox": 0.03392, "s0.loss_cls": 0.14362, "s0.acc": 95.2207, "s0.loss_bbox": 0.0763, "s1.loss_cls": 0.06087, "s1.acc": 95.99301, "s1.loss_bbox": 0.06778, "s2.loss_cls": 0.02982, "s2.acc": 96.1192, "s2.loss_bbox": 0.04435, "loss": 0.46845, "time": 1.49497}
{"mode": "train", "epoch": 15, "iter": 950, "lr": 0.0, "memory": 28083, "data_time": 0.00773, "loss_rpn_cls": 0.01982, "loss_rpn_bbox": 0.04318, "s0.loss_cls": 0.15203, "s0.acc": 94.87891, "s0.loss_bbox": 0.0794, "s1.loss_cls": 0.06582, "s1.acc": 95.55141, "s1.loss_bbox": 0.0754, "s2.loss_cls": 0.03089, "s2.acc": 95.62911, "s2.loss_bbox": 0.04938, "loss": 0.51593, "time": 1.5018}
{"mode": "train", "epoch": 15, "iter": 1000, "lr": 0.0, "memory": 28083, "data_time": 0.00778, "loss_rpn_cls": 0.01681, "loss_rpn_bbox": 0.05514, "s0.loss_cls": 0.16398, "s0.acc": 94.4082, "s0.loss_bbox": 0.09356, "s1.loss_cls": 0.07164, "s1.acc": 95.22991, "s1.loss_bbox": 0.09114, "s2.loss_cls": 0.03427, "s2.acc": 95.3859, "s2.loss_bbox": 0.05783, "loss": 0.58437, "time": 1.49916}
{"mode": "train", "epoch": 15, "iter": 1050, "lr": 0.0, "memory": 28083, "data_time": 0.00785, "loss_rpn_cls": 0.0192, "loss_rpn_bbox": 0.04374, "s0.loss_cls": 0.1439, "s0.acc": 95.04492, "s0.loss_bbox": 0.07634, "s1.loss_cls": 0.06481, "s1.acc": 95.44963, "s1.loss_bbox": 0.07331, "s2.loss_cls": 0.03228, "s2.acc": 95.13023, "s2.loss_bbox": 0.04509, "loss": 0.49867, "time": 1.48621}
{"mode": "train", "epoch": 15, "iter": 1100, "lr": 0.0, "memory": 28083, "data_time": 0.00782, "loss_rpn_cls": 0.0278, "loss_rpn_bbox": 0.04628, "s0.loss_cls": 0.17303, "s0.acc": 93.9043, "s0.loss_bbox": 0.09312, "s1.loss_cls": 0.07338, "s1.acc": 94.83292, "s1.loss_bbox": 0.09482, "s2.loss_cls": 0.03702, "s2.acc": 95.07393, "s2.loss_bbox": 0.05752, "loss": 0.60297, "time": 1.49194}
{"mode": "train", "epoch": 15, "iter": 1150, "lr": 0.0, "memory": 28083, "data_time": 0.00769, "loss_rpn_cls": 0.01397, "loss_rpn_bbox": 0.04471, "s0.loss_cls": 0.13903, "s0.acc": 95.13867, "s0.loss_bbox": 0.0814, "s1.loss_cls": 0.06153, "s1.acc": 95.88631, "s1.loss_bbox": 0.07831, "s2.loss_cls": 0.03021, "s2.acc": 96.0553, "s2.loss_bbox": 0.05251, "loss": 0.50167, "time": 1.50247}
{"mode": "train", "epoch": 15, "iter": 1200, "lr": 0.0, "memory": 28083, "data_time": 0.00784, "loss_rpn_cls": 0.018, "loss_rpn_bbox": 0.04354, "s0.loss_cls": 0.15124, "s0.acc": 94.5332, "s0.loss_bbox": 0.09079, "s1.loss_cls": 0.06328, "s1.acc": 95.44693, "s1.loss_bbox": 0.08541, "s2.loss_cls": 0.03066, "s2.acc": 95.7959, "s2.loss_bbox": 0.05195, "loss": 0.53487, "time": 1.49587}
{"mode": "train", "epoch": 15, "iter": 1250, "lr": 0.0, "memory": 28083, "data_time": 0.00779, "loss_rpn_cls": 0.01488, "loss_rpn_bbox": 0.04402, "s0.loss_cls": 0.16296, "s0.acc": 94.49609, "s0.loss_bbox": 0.0976, "s1.loss_cls": 0.07165, "s1.acc": 95.3754, "s1.loss_bbox": 0.08646, "s2.loss_cls": 0.03439, "s2.acc": 95.68385, "s2.loss_bbox": 0.05004, "loss": 0.56201, "time": 1.50429}
{"mode": "train", "epoch": 15, "iter": 1300, "lr": 0.0, "memory": 28083, "data_time": 0.00784, "loss_rpn_cls": 0.03988, "loss_rpn_bbox": 0.04751, "s0.loss_cls": 0.1688, "s0.acc": 94.0625, "s0.loss_bbox": 0.09159, "s1.loss_cls": 0.07192, "s1.acc": 94.95785, "s1.loss_bbox": 0.08759, "s2.loss_cls": 0.03478, "s2.acc": 94.94831, "s2.loss_bbox": 0.05494, "loss": 0.59701, "time": 1.49121}
{"mode": "train", "epoch": 15, "iter": 1350, "lr": 0.0, "memory": 28083, "data_time": 0.00776, "loss_rpn_cls": 0.0173, "loss_rpn_bbox": 0.04517, "s0.loss_cls": 0.15752, "s0.acc": 94.45508, "s0.loss_bbox": 0.09377, "s1.loss_cls": 0.07082, "s1.acc": 94.89988, "s1.loss_bbox": 0.0934, "s2.loss_cls": 0.03419, "s2.acc": 95.05158, "s2.loss_bbox": 0.05495, "loss": 0.56711, "time": 1.49218}
{"mode": "train", "epoch": 15, "iter": 1400, "lr": 0.0, "memory": 28083, "data_time": 0.00788, "loss_rpn_cls": 0.02145, "loss_rpn_bbox": 0.05539, "s0.loss_cls": 0.18873, "s0.acc": 93.55469, "s0.loss_bbox": 0.10725, "s1.loss_cls": 0.08435, "s1.acc": 94.27209, "s1.loss_bbox": 0.105, "s2.loss_cls": 0.04041, "s2.acc": 94.40205, "s2.loss_bbox": 0.06409, "loss": 0.66667, "time": 1.48458}
{"mode": "train", "epoch": 15, "iter": 1450, "lr": 0.0, "memory": 28083, "data_time": 0.00777, "loss_rpn_cls": 0.01542, "loss_rpn_bbox": 0.0422, "s0.loss_cls": 0.14518, "s0.acc": 94.95117, "s0.loss_bbox": 0.08142, "s1.loss_cls": 0.06387, "s1.acc": 95.79144, "s1.loss_bbox": 0.08015, "s2.loss_cls": 0.0314, "s2.acc": 95.73284, "s2.loss_bbox": 0.04887, "loss": 0.5085, "time": 1.49255}
{"mode": "train", "epoch": 15, "iter": 1500, "lr": 0.0, "memory": 28083, "data_time": 0.00781, "loss_rpn_cls": 0.01486, "loss_rpn_bbox": 0.03804, "s0.loss_cls": 0.13611, "s0.acc": 95.16406, "s0.loss_bbox": 0.0771, "s1.loss_cls": 0.05943, "s1.acc": 95.83386, "s1.loss_bbox": 0.07798, "s2.loss_cls": 0.03017, "s2.acc": 95.93716, "s2.loss_bbox": 0.05016, "loss": 0.48385, "time": 1.49867}
{"mode": "train", "epoch": 15, "iter": 1550, "lr": 0.0, "memory": 28083, "data_time": 0.00778, "loss_rpn_cls": 0.01164, "loss_rpn_bbox": 0.03093, "s0.loss_cls": 0.12357, "s0.acc": 95.69922, "s0.loss_bbox": 0.06724, "s1.loss_cls": 0.05455, "s1.acc": 96.50067, "s1.loss_bbox": 0.0674, "s2.loss_cls": 0.02573, "s2.acc": 96.68196, "s2.loss_bbox": 0.04254, "loss": 0.42361, "time": 1.49958}
{"mode": "train", "epoch": 15, "iter": 1600, "lr": 0.0, "memory": 28083, "data_time": 0.0077, "loss_rpn_cls": 0.0218, "loss_rpn_bbox": 0.04126, "s0.loss_cls": 0.16232, "s0.acc": 94.18945, "s0.loss_bbox": 0.09579, "s1.loss_cls": 0.07218, "s1.acc": 95.01287, "s1.loss_bbox": 0.08839, "s2.loss_cls": 0.03379, "s2.acc": 95.36582, "s2.loss_bbox": 0.05495, "loss": 0.57048, "time": 1.48939}
{"mode": "train", "epoch": 15, "iter": 1650, "lr": 0.0, "memory": 28083, "data_time": 0.00775, "loss_rpn_cls": 0.01428, "loss_rpn_bbox": 0.05062, "s0.loss_cls": 0.15872, "s0.acc": 94.22266, "s0.loss_bbox": 0.09247, "s1.loss_cls": 0.06854, "s1.acc": 94.92208, "s1.loss_bbox": 0.09412, "s2.loss_cls": 0.03309, "s2.acc": 95.15094, "s2.loss_bbox": 0.06059, "loss": 0.57242, "time": 1.49066}
{"mode": "train", "epoch": 15, "iter": 1700, "lr": 0.0, "memory": 28083, "data_time": 0.0079, "loss_rpn_cls": 0.02391, "loss_rpn_bbox": 0.04805, "s0.loss_cls": 0.17038, "s0.acc": 94.25, "s0.loss_bbox": 0.09253, "s1.loss_cls": 0.07792, "s1.acc": 95.04048, "s1.loss_bbox": 0.09214, "s2.loss_cls": 0.03841, "s2.acc": 94.9553, "s2.loss_bbox": 0.05806, "loss": 0.6014, "time": 1.49234}
{"mode": "train", "epoch": 15, "iter": 1750, "lr": 0.0, "memory": 28083, "data_time": 0.00766, "loss_rpn_cls": 0.01874, "loss_rpn_bbox": 0.04552, "s0.loss_cls": 0.14829, "s0.acc": 94.64062, "s0.loss_bbox": 0.08704, "s1.loss_cls": 0.06685, "s1.acc": 95.27162, "s1.loss_bbox": 0.08049, "s2.loss_cls": 0.03252, "s2.acc": 95.48257, "s2.loss_bbox": 0.04945, "loss": 0.52889, "time": 1.48927}
{"mode": "train", "epoch": 15, "iter": 1800, "lr": 0.0, "memory": 28083, "data_time": 0.00784, "loss_rpn_cls": 0.01417, "loss_rpn_bbox": 0.04331, "s0.loss_cls": 0.13373, "s0.acc": 95.57812, "s0.loss_bbox": 0.06667, "s1.loss_cls": 0.06003, "s1.acc": 96.28971, "s1.loss_bbox": 0.06776, "s2.loss_cls": 0.02847, "s2.acc": 96.49548, "s2.loss_bbox": 0.0432, "loss": 0.45734, "time": 1.5012}
{"mode": "train", "epoch": 15, "iter": 1850, "lr": 0.0, "memory": 28083, "data_time": 0.00783, "loss_rpn_cls": 0.02266, "loss_rpn_bbox": 0.04491, "s0.loss_cls": 0.15951, "s0.acc": 94.31055, "s0.loss_bbox": 0.08215, "s1.loss_cls": 0.07523, "s1.acc": 94.76775, "s1.loss_bbox": 0.08307, "s2.loss_cls": 0.03766, "s2.acc": 94.73284, "s2.loss_bbox": 0.05458, "loss": 0.55976, "time": 1.4969}
{"mode": "train", "epoch": 15, "iter": 1900, "lr": 0.0, "memory": 28083, "data_time": 0.00794, "loss_rpn_cls": 0.02153, "loss_rpn_bbox": 0.04475, "s0.loss_cls": 0.14748, "s0.acc": 95.13672, "s0.loss_bbox": 0.07831, "s1.loss_cls": 0.0624, "s1.acc": 95.92811, "s1.loss_bbox": 0.07483, "s2.loss_cls": 0.03121, "s2.acc": 95.98467, "s2.loss_bbox": 0.0482, "loss": 0.50873, "time": 1.49836}
{"mode": "train", "epoch": 15, "iter": 1950, "lr": 0.0, "memory": 28083, "data_time": 0.00766, "loss_rpn_cls": 0.02016, "loss_rpn_bbox": 0.04935, "s0.loss_cls": 0.17664, "s0.acc": 93.70508, "s0.loss_bbox": 0.10542, "s1.loss_cls": 0.07931, "s1.acc": 94.40625, "s1.loss_bbox": 0.10147, "s2.loss_cls": 0.03882, "s2.acc": 94.325, "s2.loss_bbox": 0.06128, "loss": 0.63244, "time": 1.49452}
{"mode": "train", "epoch": 15, "iter": 2000, "lr": 0.0, "memory": 28083, "data_time": 0.00786, "loss_rpn_cls": 0.01588, "loss_rpn_bbox": 0.03751, "s0.loss_cls": 0.1368, "s0.acc": 95.33398, "s0.loss_bbox": 0.07533, "s1.loss_cls": 0.06095, "s1.acc": 96.09844, "s1.loss_bbox": 0.07502, "s2.loss_cls": 0.03026, "s2.acc": 96.23722, "s2.loss_bbox": 0.0504, "loss": 0.48215, "time": 1.49036}
{"mode": "train", "epoch": 15, "iter": 2050, "lr": 0.0, "memory": 28083, "data_time": 0.0077, "loss_rpn_cls": 0.01764, "loss_rpn_bbox": 0.03754, "s0.loss_cls": 0.1628, "s0.acc": 94.44727, "s0.loss_bbox": 0.08248, "s1.loss_cls": 0.07224, "s1.acc": 95.04323, "s1.loss_bbox": 0.07913, "s2.loss_cls": 0.03378, "s2.acc": 95.61813, "s2.loss_bbox": 0.05067, "loss": 0.53628, "time": 1.48818}
{"mode": "train", "epoch": 15, "iter": 2100, "lr": 0.0, "memory": 28083, "data_time": 0.00794, "loss_rpn_cls": 0.02178, "loss_rpn_bbox": 0.03129, "s0.loss_cls": 0.11585, "s0.acc": 95.86719, "s0.loss_bbox": 0.065, "s1.loss_cls": 0.04867, "s1.acc": 96.55496, "s1.loss_bbox": 0.06424, "s2.loss_cls": 0.02341, "s2.acc": 96.48329, "s2.loss_bbox": 0.0404, "loss": 0.41064, "time": 1.49002}
{"mode": "train", "epoch": 15, "iter": 2150, "lr": 0.0, "memory": 28083, "data_time": 0.00777, "loss_rpn_cls": 0.01529, "loss_rpn_bbox": 0.04317, "s0.loss_cls": 0.12793, "s0.acc": 95.34766, "s0.loss_bbox": 0.0739, "s1.loss_cls": 0.05301, "s1.acc": 96.11349, "s1.loss_bbox": 0.07459, "s2.loss_cls": 0.02532, "s2.acc": 96.20045, "s2.loss_bbox": 0.04633, "loss": 0.45953, "time": 1.49146}
{"mode": "train", "epoch": 15, "iter": 2200, "lr": 0.0, "memory": 28083, "data_time": 0.00788, "loss_rpn_cls": 0.03062, "loss_rpn_bbox": 0.04427, "s0.loss_cls": 0.17303, "s0.acc": 93.97656, "s0.loss_bbox": 0.09423, "s1.loss_cls": 0.07628, "s1.acc": 94.60833, "s1.loss_bbox": 0.09316, "s2.loss_cls": 0.03817, "s2.acc": 94.52393, "s2.loss_bbox": 0.05789, "loss": 0.60765, "time": 1.49029}
{"mode": "train", "epoch": 15, "iter": 2250, "lr": 0.0, "memory": 28083, "data_time": 0.00783, "loss_rpn_cls": 0.01335, "loss_rpn_bbox": 0.0393, "s0.loss_cls": 0.11146, "s0.acc": 96.13672, "s0.loss_bbox": 0.05657, "s1.loss_cls": 0.0469, "s1.acc": 97.1099, "s1.loss_bbox": 0.0619, "s2.loss_cls": 0.02243, "s2.acc": 97.2002, "s2.loss_bbox": 0.04467, "loss": 0.39657, "time": 1.48807}
{"mode": "train", "epoch": 15, "iter": 2300, "lr": 0.0, "memory": 28083, "data_time": 0.00788, "loss_rpn_cls": 0.01836, "loss_rpn_bbox": 0.05086, "s0.loss_cls": 0.1502, "s0.acc": 94.68359, "s0.loss_bbox": 0.07947, "s1.loss_cls": 0.06593, "s1.acc": 95.54097, "s1.loss_bbox": 0.0786, "s2.loss_cls": 0.03329, "s2.acc": 95.12366, "s2.loss_bbox": 0.05246, "loss": 0.52918, "time": 1.48685}
{"mode": "train", "epoch": 15, "iter": 2350, "lr": 0.0, "memory": 28083, "data_time": 0.00778, "loss_rpn_cls": 0.01454, "loss_rpn_bbox": 0.04583, "s0.loss_cls": 0.17015, "s0.acc": 94.11328, "s0.loss_bbox": 0.09507, "s1.loss_cls": 0.07569, "s1.acc": 95.08575, "s1.loss_bbox": 0.08709, "s2.loss_cls": 0.03623, "s2.acc": 95.2199, "s2.loss_bbox": 0.0544, "loss": 0.579, "time": 1.49936}
{"mode": "train", "epoch": 15, "iter": 2400, "lr": 0.0, "memory": 28083, "data_time": 0.00773, "loss_rpn_cls": 0.02561, "loss_rpn_bbox": 0.04995, "s0.loss_cls": 0.16383, "s0.acc": 94.47852, "s0.loss_bbox": 0.09784, "s1.loss_cls": 0.07033, "s1.acc": 95.35551, "s1.loss_bbox": 0.09897, "s2.loss_cls": 0.03391, "s2.acc": 95.50474, "s2.loss_bbox": 0.05615, "loss": 0.59659, "time": 1.49424}
{"mode": "val", "epoch": 15, "iter": 982, "lr": 0.0, "bbox_mAP": 0.578, "bbox_mAP_50": 0.728, "bbox_mAP_75": 0.619, "bbox_mAP_s": 0.023, "bbox_mAP_m": 0.217, "bbox_mAP_l": 0.653, "bbox_mAP_copypaste": "0.578 0.728 0.619 0.023 0.217 0.653"}
